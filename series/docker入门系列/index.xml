<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>docker入门系列 - seris - 打工人日志 - jobcher</title>
        <link>https://www.jobcher.com/series/docker%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97/</link>
        <description>docker入门系列 - seris - 打工人日志 - jobcher</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>nb@nbtyfood.com (jobcher)</managingEditor>
            <webMaster>nb@nbtyfood.com (jobcher)</webMaster><lastBuildDate>Mon, 19 Sep 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.jobcher.com/series/docker%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97/" rel="self" type="application/rss+xml" /><item>
    <title>清理Docker容器日志</title>
    <link>https://www.jobcher.com/cleandocker/</link>
    <pubDate>Mon, 19 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>jobcher</author>
    <guid>https://www.jobcher.com/cleandocker/</guid>
    <description><![CDATA[<h1 id="清理-docker-容器日志">清理 Docker 容器日志</h1>
<p>如果 docker 容器正在运行，那么使用<code>rm -rf</code>方式删除日志后，通过<code>df -h</code>会发现磁盘空间并没有释放。原因是在 Linux 或者 Unix 系统中，通过<code>rm -rf</code>或者文件管理器删除文件，将会从文件系统的目录结构上解除链接（unlink）。如果文件是被打开的（有一个进程正在使用），那么进程将仍然可以读取该文件，磁盘空间也一直被占用。正确姿势是<code>cat /dev/null &gt; *-json.log</code>，当然你也可以通过<code>rm -rf</code>删除后重启 docker。</p>
<h2 id="日志清理脚本-clean_docker_logsh">日志清理脚本 clean_docker_log.sh</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;======== start clean docker containers logs ========&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">logs</span><span class="o">=</span><span class="k">$(</span>find /var/lib/docker/containers/ -name *-json.log<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> log in <span class="nv">$logs</span>
</span></span><span class="line"><span class="cl">        <span class="k">do</span>
</span></span><span class="line"><span class="cl">                <span class="nb">echo</span> <span class="s2">&#34;clean logs : </span><span class="nv">$log</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                cat /dev/null &gt; <span class="nv">$log</span>
</span></span><span class="line"><span class="cl">        <span class="k">done</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;======== end clean docker containers logs ========&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>chmod +x clean_docker_log.sh &amp;&amp; ./clean_docker_log.sh</p>
</blockquote>
<h2 id="设置-docker-容器日志大小">设置 Docker 容器日志大小</h2>
<p>设置一个容器服务的日志大小上限<br>
上述方法，日志文件迟早又会涨回来。要从根本上解决问题，需要限制容器服务的日志大小上限。这个通过配置容器<code>docker-compose</code>的<code>max-size</code>选项来实现</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">nginx</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx:1.12.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">logging</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">driver</span><span class="p">:</span><span class="w"> </span><span class="l">“json-file”</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">options</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">max-size</span><span class="p">:</span><span class="w"> </span><span class="l">“5g”</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="全局设置">全局设置</h3>
<p>新建<code>/etc/docker/daemon.json</code>，若有就不用新建了。添加<code>log-dirver</code>和<code>log-opts</code>参数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="err">#</span> <span class="err">vim</span> <span class="err">/etc/docker/daemon.json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;log-driver&#34;</span><span class="p">:</span><span class="s2">&#34;json-file&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;log-opts&#34;</span><span class="p">:</span> <span class="p">{</span><span class="nt">&#34;max-size&#34;</span><span class="p">:</span><span class="s2">&#34;500m&#34;</span><span class="p">,</span> <span class="nt">&#34;max-file&#34;</span><span class="p">:</span><span class="s2">&#34;3&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>max-size=500m</code>，意味着一个容器日志大小上限是<code>500M</code><br>
<code>max-file=3</code>，意味着一个容器有三个日志，分别是<code>id+.json</code>、<code>id+1.json</code>、<code>id+2.json</code>。</p>
<blockquote>
<p>注意：设置的日志大小，只对新建的容器有效。</p>
</blockquote>
]]></description>
</item>
<item>
    <title>contained 安装及使用</title>
    <link>https://www.jobcher.com/contained/</link>
    <pubDate>Wed, 17 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>jobcher</author>
    <guid>https://www.jobcher.com/contained/</guid>
    <description><![CDATA[<h1 id="contained-安装及使用">contained 安装及使用</h1>
<p><br>
containerd 是一个行业标准的容器运行时，强调简单性、健壮性和可移植性。它可作为 Linux 和 Windows 的守护进程使用，可以管理其主机系统的完整容器生命周期：图像传输和存储、容器执行和监督、低级存储和网络附件等。<br>
<code>containerd</code> is a member of <code>CNCF</code> with <code>graduated</code> status.</p>
<ol>
<li>早在 2016 年 3 月，<code>Docker 1.11</code>的<code>Docker Engine</code>里就包含了<code>containerd</code>，而现在则是把<code>containerd</code>从<code>Docker Engine</code>里彻底剥离出来，作为一个独立的开源项目独立发展，目标是提供一个更加开放、稳定的容器运行基础设施。和原先包含在 Docker Engine 里<code>containerd</code>相比，独立的<code>containerd</code>将具有更多的功能，可以涵盖整个容器运行时管理的所有需求。</li>
<li><code>containerd</code>并不是直接面向最终用户的，而是主要用于集成到更上层的系统里，比如<code>Swarm</code>, <code>Kubernetes</code>, <code>Mesos</code>等容器编排系统。</li>
<li><code>containerd</code>以<code>Daemon</code>的形式运行在系统上，通过暴露底层的<code>gRPC API</code>，上层系统可以通过这些<code>API</code>管理机器上的容器。</li>
<li>每个<code>containerd</code>只负责<code>一台机器</code>，Pull 镜像，对容器的操作（启动、停止等），网络，存储都是由 containerd 完成。具体运行容器由<code>runC</code>负责，实际上只要是符合<code>OCI规范</code>的容器都可以支持。</li>
<li>对于容器编排服务来说，运行时只需要使用<code>containerd+runC</code>，更加轻量，容易管理。 5.独立之后<code>containerd</code>的特性演进可以和<code>Docker Engine</code>分开，专注容器运行时管理，可以更稳定。</li>
</ol>
<h2 id="安装">安装</h2>
<p>centos</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">yum install -y containerd.io
</span></span></code></pre></td></tr></table>
</div>
</div><p>ubuntu</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">apt install -y containerd.io
</span></span></code></pre></td></tr></table>
</div>
</div><p>设置开机自启</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">systemctl <span class="nb">enable</span> containerd
</span></span><span class="line"><span class="cl">systemctl start containerd
</span></span><span class="line"><span class="cl">systemctl status containerd
</span></span></code></pre></td></tr></table>
</div>
</div><p>验证</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">ctr version
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="ctr-命令">ctr 命令</h2>
<table>
<thead>
<tr>
<th style="text-align:left">命令</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">plugins, plugin</td>
<td style="text-align:left">提供有关容器插件的信息</td>
</tr>
<tr>
<td style="text-align:left">version</td>
<td style="text-align:left">打印客户端和服务器版本</td>
</tr>
<tr>
<td style="text-align:left">containers, c, container</td>
<td style="text-align:left">管理容器</td>
</tr>
<tr>
<td style="text-align:left">content</td>
<td style="text-align:left">管理内容</td>
</tr>
<tr>
<td style="text-align:left">events, event</td>
<td style="text-align:left">显示容器事件</td>
</tr>
<tr>
<td style="text-align:left">images, image, i</td>
<td style="text-align:left">管理图像</td>
</tr>
<tr>
<td style="text-align:left">leases</td>
<td style="text-align:left">管理租约</td>
</tr>
<tr>
<td style="text-align:left">namespaces, namespace, ns</td>
<td style="text-align:left">管理租命名空间</td>
</tr>
<tr>
<td style="text-align:left">pprof</td>
<td style="text-align:left">为 containerd 提供 golang pprof 输出</td>
</tr>
<tr>
<td style="text-align:left">run</td>
<td style="text-align:left">运行一个容器</td>
</tr>
<tr>
<td style="text-align:left">snapshots, snapshot</td>
<td style="text-align:left">管理快照</td>
</tr>
<tr>
<td style="text-align:left">tasks, t, task</td>
<td style="text-align:left">管理任务</td>
</tr>
<tr>
<td style="text-align:left">install</td>
<td style="text-align:left">安装一个新包</td>
</tr>
<tr>
<td style="text-align:left">oci</td>
<td style="text-align:left">OCI 工具</td>
</tr>
<tr>
<td style="text-align:left">shim</td>
<td style="text-align:left">直接与 shim 交互</td>
</tr>
<tr>
<td style="text-align:left">help, h</td>
<td style="text-align:left">显示命令列表或一个命令的帮助</td>
</tr>
</tbody>
</table>
]]></description>
</item>
<item>
    <title>docker 命令</title>
    <link>https://www.jobcher.com/docker/</link>
    <pubDate>Tue, 28 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>jobcher</author>
    <guid>https://www.jobcher.com/docker/</guid>
    <description><![CDATA[<h1 id="安装-docker">安装 docker</h1>
<p>通过 docker 脚本安装</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    curl -fsSL https://get.docker.com <span class="p">|</span> bash -s docker --mirror Aliyun
</span></span><span class="line"><span class="cl">    curl -sSL https://get.daocloud.io/docker <span class="p">|</span> sh
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="docker-compose-安装">docker-compose 安装</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1">#下载安装</span>
</span></span><span class="line"><span class="cl">sudo curl -L <span class="s2">&#34;https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-</span><span class="k">$(</span>uname -s<span class="k">)</span><span class="s2">-</span><span class="k">$(</span>uname -m<span class="k">)</span><span class="s2">&#34;</span> -o /usr/local/bin/docker-compose
</span></span><span class="line"><span class="cl"><span class="c1">#可执行权限</span>
</span></span><span class="line"><span class="cl">sudo chmod +x /usr/local/bin/docker-compose
</span></span><span class="line"><span class="cl"><span class="c1">#创建软链：</span>
</span></span><span class="line"><span class="cl">sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
</span></span><span class="line"><span class="cl"><span class="c1">#测试是否安装成功</span>
</span></span><span class="line"><span class="cl">docker-compose --version
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="docker-命令">docker 命令</h2>
<p>常用 docker 命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    <span class="c1">#查看容器</span>
</span></span><span class="line"><span class="cl">    docker ps
</span></span><span class="line"><span class="cl">    <span class="c1">#查看镜像</span>
</span></span><span class="line"><span class="cl">    docker images
</span></span><span class="line"><span class="cl">    <span class="c1">#停止当前所有容器</span>
</span></span><span class="line"><span class="cl">    docker stop <span class="k">$(</span>docker ps -aq<span class="k">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#删除当前停止的所有容器</span>
</span></span><span class="line"><span class="cl">    docker rm <span class="k">$(</span>docker ps -aq<span class="k">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#删除镜像</span>
</span></span><span class="line"><span class="cl">    docker rmi nginx
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>docker 安装kong 网关</title>
    <link>https://www.jobcher.com/docker-kong/</link>
    <pubDate>Wed, 22 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>jobcher</author>
    <guid>https://www.jobcher.com/docker-kong/</guid>
    <description><![CDATA[<h1 id="docker-安装-kong-网关">docker 安装 kong 网关</h1>
<h2 id="建立数据库">建立数据库</h2>
<ol>
<li>创建网络</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker network create kong-net
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>建立数据库</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker run -d --name kong-database <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --network<span class="o">=</span>kong-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p 5432:5432 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;POSTGRES_USER=kong&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;POSTGRES_DB=kong&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;POSTGRES_PASSWORD=kong123&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  postgres:9.6
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>创建 kong 数据</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker run --rm --network<span class="o">=</span>kong-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_DATABASE=postgres&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_PG_HOST=kong-database&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_PG_PASSWORD=kong123&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_PASSWORD=kong123&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  kong:latest kong migrations bootstrap
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="创建-kong">创建 kong</h2>
<ol>
<li>创建 kong gateway</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">  docker run -d --name kong <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --network<span class="o">=</span>kong-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_DATABASE=postgres&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_PG_HOST=kong-database&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_PG_USER=kong&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_PG_PASSWORD=kong123&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_CASSANDRA_CONTACT_POINTS=kong-database&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_PROXY_ACCESS_LOG=/dev/stdout&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_ADMIN_ACCESS_LOG=/dev/stdout&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_PROXY_ERROR_LOG=/dev/stderr&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_ADMIN_ERROR_LOG=/dev/stderr&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="s2">&#34;KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p 8000:8000 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p 8443:8443 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p 127.0.0.1:8001:8001 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p 127.0.0.1:8444:8444 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  kong:latest
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="安装-konga">安装 konga</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker pull pantsel/konga:latest
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker run --rm pantsel/konga:latest <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        -c prepare <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        -a postgres <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        -u postgresql://kong:kong123@172.18.0.1:5432/konga
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker run -d -p 1337:1337 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        --network kong-net <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        --name konga <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        -e <span class="s2">&#34;NODE_ENV=production&#34;</span>  <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        -e <span class="s2">&#34;DB_ADAPTER=postgres&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        -e <span class="s2">&#34;DB_URI=postgresql://kong:kong123@172.18.0.1:5432/konga&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        pantsel/konga
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>搭建docker registry 镜像仓库</title>
    <link>https://www.jobcher.com/docker-registry/</link>
    <pubDate>Wed, 22 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>jobcher</author>
    <guid>https://www.jobcher.com/docker-registry/</guid>
    <description><![CDATA[<h1 id="搭建-docker-registry-镜像仓库">搭建 docker registry 镜像仓库</h1>
<h2 id="获取镜像">获取镜像</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker pull registry:2.7.1
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker pull hyper/docker-registry-web
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="容器运行">容器运行</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">mkdir -p /opt/data/registry
</span></span><span class="line"><span class="cl">docker run -d -p 5000:5000 -v /opt/data/registry:/var/lib/registry --name registry registry:2.7.1
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker run -d -p 8080:8080 --name registry-web --link registry <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>   -e <span class="nv">REGISTRY_URL</span><span class="o">=</span>http://192.168.99.146:5000/v2 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>   -e <span class="nv">REGISTRY_TRUST_ANY_SSL</span><span class="o">=</span><span class="nb">true</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>   -e <span class="nv">REGISTRY_BASIC_AUTH</span><span class="o">=</span><span class="s2">&#34;GjhYGDGi2HhkJB&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>   -e <span class="nv">REGISTRY_NAME</span><span class="o">=</span>192.168.99.146:5000 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>   hyper/docker-registry-web
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="上传容器">上传容器</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">vim /etc/docker/daemon.json
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;insecure-registries&#34;</span>: <span class="o">[</span><span class="s2">&#34;192.168.99.146:5000&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">docker tag sjtfreaks/hogo-nginx:v1.1 192.168.99.146:5000/sjtfreaks/hogo-nginx:v1.1
</span></span><span class="line"><span class="cl">docker push 192.168.99.146:5000/sjtfreaks/hogo-nginx:v1.1
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>docker image镜像上传</title>
    <link>https://www.jobcher.com/dockerimage/</link>
    <pubDate>Thu, 09 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>jobcher</author>
    <guid>https://www.jobcher.com/dockerimage/</guid>
    <description><![CDATA[<h1 id="docker-image-镜像上传">docker image 镜像上传</h1>
<p>登入 docker hub，在https://hub.docker.com上注册你的账号。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker login
</span></span><span class="line"><span class="cl">username：#输入你的用户名
</span></span><span class="line"><span class="cl">password：#输入你的密码
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="上传镜像">上传镜像</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker tag nginx:hugo sjtfreaks/hogo-nginx:v1
</span></span><span class="line"><span class="cl">docker push sjtfreaks/hogo-nginx:v1
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>
