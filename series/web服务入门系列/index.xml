<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>web服务入门系列 - seris - 打工人日志 - jobcher</title>
        <link>http://www.jobcher.com/series/web%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97/</link>
        <description>web服务入门系列 - seris - 打工人日志 - jobcher</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>nb@nbtyfood.com (jobcher)</managingEditor>
            <webMaster>nb@nbtyfood.com (jobcher)</webMaster><lastBuildDate>Wed, 15 Jun 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://www.jobcher.com/series/web%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97/" rel="self" type="application/rss+xml" /><item>
    <title>nginx ssh-key connection exception</title>
    <link>http://www.jobcher.com/nginx05/</link>
    <pubDate>Wed, 15 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/nginx05/</guid>
    <description><![CDATA[<h1 id="nginx-ssh-key-connection-exception">nginx ssh-key connection exception</h1>
<p>Not long ago, I wanted to restart the company&rsquo;s gitlab server.I couldn&rsquo;t coonect to ssh when it restarted.emm……I try copy the ssh rsa.pub,but it didn&rsquo;t work.</p>
<p>error log:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">identity_sign: private key ~/.ssh/id_rsa contents do not match public
</span></span></code></pre></td></tr></table>
</div>
</div><p>what is happen？</p>
<h1 id="solution">solution</h1>
<p>reconfigure gitlab ssh key!</p>
<ol>
<li>create new ssh key</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">ssh-keygen -t rsa -C <span class="s1">&#39;git@gitlab.com&#39;</span> -f ~/.ssh/gitlab-rsa
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>update config file,enter ~./ssh,open config</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1"># add host</span>
</span></span><span class="line"><span class="cl">Host gitlab.com
</span></span><span class="line"><span class="cl">    HostName gitlab.com
</span></span><span class="line"><span class="cl">    IdentityFile ~/.ssh/gitlab_id-rsa
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>enter <a href="http://gitlab.com" target="_blank" rel="noopener noreffer">http://gitlab.com</a> ,Profile Settings&ndash;&gt;SSH Keys&ndash;&gt;Add SSH Key</li>
</ol>
<p><code>You are done</code></p>
]]></description>
</item><item>
    <title>nginx 编译参数详解</title>
    <link>http://www.jobcher.com/nginx02/</link>
    <pubDate>Fri, 24 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/nginx02/</guid>
    <description><![CDATA[<h1 id="nginx-编译参数详解">nginx 编译参数详解</h1>
<table>
<thead>
<tr>
<th style="text-align:left">nginx 编译参数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">–prefix=</td>
<td style="text-align:left">指向安装目录</td>
</tr>
<tr>
<td style="text-align:left">–sbin-path</td>
<td style="text-align:left">指向（执行）程序文件（nginx）</td>
</tr>
<tr>
<td style="text-align:left">–conf-path=</td>
<td style="text-align:left">指向配置文件（nginx.conf）</td>
</tr>
<tr>
<td style="text-align:left">–error-log-path=</td>
<td style="text-align:left">指向错误日志目录</td>
</tr>
<tr>
<td style="text-align:left">–pid-path=</td>
<td style="text-align:left">指向 pid 文件（nginx.pid）</td>
</tr>
<tr>
<td style="text-align:left">–lock-path=</td>
<td style="text-align:left">指向 lock 文件（nginx.lock）（安装文件锁定，防止安装文件被别人利用，或自己误操作。）</td>
</tr>
<tr>
<td style="text-align:left">–user=</td>
<td style="text-align:left">指定程序运行时的非特权用户</td>
</tr>
<tr>
<td style="text-align:left">–group=</td>
<td style="text-align:left">指定程序运行时的非特权用户组</td>
</tr>
<tr>
<td style="text-align:left">–builddir=</td>
<td style="text-align:left">指向编译目录</td>
</tr>
<tr>
<td style="text-align:left">–with-rtsig_module</td>
<td style="text-align:left">启用 rtsig 模块支持（实时信号）</td>
</tr>
<tr>
<td style="text-align:left">–with-select_module</td>
<td style="text-align:left">启用 select 模块支持（一种轮询模式,不推荐在高载环境下使用）禁用：–withoutselect_module</td>
</tr>
<tr>
<td style="text-align:left">–with-poll_module</td>
<td style="text-align:left">启用 poll 模块支持（功能与 select 相同，与 select 特性相同，为一种轮询模式,不推荐在高载环境下使用）</td>
</tr>
<tr>
<td style="text-align:left">–with-file-aio</td>
<td style="text-align:left">启用 file aio 支持（一种 APL 文件传输格式）</td>
</tr>
<tr>
<td style="text-align:left">–with-ipv6</td>
<td style="text-align:left">启用 ipv6 支持</td>
</tr>
<tr>
<td style="text-align:left">–with-http_ssl_module</td>
<td style="text-align:left">启用 ngx_http_ssl_module 支持（使支持 https 请求，需已安装 openssl）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_realip_module</td>
<td style="text-align:left">启用 ngx_http_realip_module 支持（这个模块允许从请求标头更改客户端的 IP 地址值，默认为关）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_addition_module</td>
<td style="text-align:left">启用 ngx_http_addition_module 支持（作为一个输出过滤器，支持不完全缓冲，分部分响应请求）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_xslt_module</td>
<td style="text-align:left">启用 ngx_http_xslt_module 支持（过滤转换 XML 请求</td>
</tr>
<tr>
<td style="text-align:left">–with-http_image_filter_module</td>
<td style="text-align:left">启用 ngx_http_image_filter_module 支持（传输 JPEG/GIF/PNG 图片的一个过滤器）（默认为不启用。gd 库要用到）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_geoip_module</td>
<td style="text-align:left">启用 ngx_http_geoip_module 支持（该模块创建基于与 MaxMind GeoIP 二进制文件相配的客户端 IP 地址的 ngx_http_geoip_module 变量）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_sub_module</td>
<td style="text-align:left">启用 ngx_http_sub_module 支持（允许用一些其他文本替换 nginx 响应中的一些文本）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_dav_module</td>
<td style="text-align:left">启用 ngx_http_dav_module 支持（增加 PUT,DELETE,MKCOL：创建集合,COPY 和 MOVE 方法）默认情况下为关闭，需编译开启</td>
</tr>
<tr>
<td style="text-align:left">–with-http_flv_module</td>
<td style="text-align:left">启用 ngx_http_flv_module 支持（提供寻求内存使用基于时间的偏移量文件）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_gzip_static_module</td>
<td style="text-align:left">启用 ngx_http_gzip_static_module 支持（在线实时压缩输出数据流）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_random_index_module</td>
<td style="text-align:left">启用 ngx_http_random_index_module 支持（从目录中随机挑选一个目录索引）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_secure_link_module</td>
<td style="text-align:left">启用 ngx_http_secure_link_module 支持（计算和检查要求所需的安全链接网址）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_degradation_module</td>
<td style="text-align:left">启用 ngx_http_degradation_module 支持（允许在内存不足的情况下返回 204 或 444 码）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_stub_status_module</td>
<td style="text-align:left">启用 ngx_http_stub_status_module 支持（获取 nginx 自上次启动以来的工作状态）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_charset_module</td>
<td style="text-align:left">禁用 ngx_http_charset_module 支持（重新编码 web 页面，但只能是一个方向–服务器端到客户端，并且只有一个字节的编码可以被重新编码）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_gzip_module</td>
<td style="text-align:left">禁用 ngx_http_gzip_module 支持（该模块同-with-http_gzip_static_module 功能一样）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_ssi_module</td>
<td style="text-align:left">禁用 ngx_http_ssi_module 支持（该模块提供了一个在输入端处理处理服务器包含文件（SSI）的过滤器，目前支持 SSI 命令的列表是不完整的）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_userid_module</td>
<td style="text-align:left">禁用 ngx_http_userid_module 支持（该模块用来处理用来确定客户端后续请求的 cookies）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_access_module</td>
<td style="text-align:left">禁用 ngx_http_access_module 支持（该模块提供了一个简单的基于主机的访问控制。允许/拒绝基于 ip 地址）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_auth_basic_module</td>
<td style="text-align:left">禁用 ngx_http_auth_basic_module（该模块是可以使用用户名和密码基于 http 基本认证方法来保护你的站点或其部分内容）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_autoindex_module</td>
<td style="text-align:left">禁用 disable ngx_http_autoindex_module 支持（该模块用于自动生成目录列表，只在 ngx_http_index_module 模块未找到索引文件时发出请求。）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_geo_module</td>
<td style="text-align:left">禁用 ngx_http_geo_module 支持（创建一些变量，其值依赖于客户端的 IP 地址）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_map_module</td>
<td style="text-align:left">禁用 ngx_http_map_module 支持（使用任意的键/值对设置配置变量）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_split_clients_module</td>
<td style="text-align:left">禁用 ngx_http_split_clients_module 支持（该模块用来基于某些条件划分用户。条件如：ip 地址、报头、cookies 等等）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_referer_module</td>
<td style="text-align:left">禁用 disable ngx_http_referer_module 支持（该模块用来过滤请求，拒绝报</td>
</tr>
<tr>
<td style="text-align:left">头中 Referer 值不正确的请求）</td>
<td></td>
</tr>
<tr>
<td style="text-align:left">–without-http_rewrite_module</td>
<td style="text-align:left">禁用 ngx_http_rewrite_module 支持（该模块允许使用正则表达式改变 URI，并且根据变量来转向以及选择配置。如果在 server 级别设置该选项，那么他们将在 location 之前生效。如果在 location 还有更进一步的重写规则，location 部分的规则依然会被执行。如果这个 URI 重写是因为 location 部分的规则造成的，那么 location 部分会再次被执行作为新的 URI。 这个循环会执行 10 次，然后 Nginx 会返回一个 500 错误。）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_proxy_module</td>
<td style="text-align:left">禁用 ngx_http_proxy_module 支持（有关代理服务器）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_fastcgi_module</td>
<td style="text-align:left">禁用 ngx_http_fastcgi_module 支持（该模块允许 Nginx 与 FastCGI 进程交互，并通过传递参数来控制 FastCGI 进程工作。 ）FastCGI 一个常驻型的公共网关接口。</td>
</tr>
<tr>
<td style="text-align:left">–without-http_uwsgi_module</td>
<td style="text-align:left">禁用 ngx_http_uwsgi_module 支持（该模块用来医用 uwsgi 协议，uWSGI 服务器相关）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_scgi_module</td>
<td style="text-align:left">禁用 ngx_http_scgi_module 支持（该模块用来启用 SCGI 协议支持，SCGI 协议是 CGI 协议的替代。它是一种应用程序与 HTTP 服务接口标准。它有些像 FastCGI 但他的设计 更容易实现。）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_memcached_module</td>
<td style="text-align:left">禁用 ngx_http_memcached_module 支持（该模块用来提供简单的缓存，以提高系统效率）</td>
</tr>
<tr>
<td style="text-align:left">-without-http_limit_zone_module</td>
<td style="text-align:left">禁用 ngx_http_limit_zone_module 支持（该模块可以针对条件，进行会话的并发连接数控制）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_limit_req_module</td>
<td style="text-align:left">禁用 ngx_http_limit_req_module 支持（该模块允许你对于一个地址进行请求数量的限制用一个给定的 session 或一个特定的事件）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_empty_gif_module</td>
<td style="text-align:left">禁用 ngx_http_empty_gif_module 支持（该模块在内存中常驻了一个 1*1 的透明 GIF 图像，可以被非常快速的调用）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_browser_module</td>
<td style="text-align:left">禁用 ngx_http_browser_module 支持（该模块用来创建依赖于请求报头的值。如果浏览器为 modern ，则$modern_browser 等于 modern_browser_value 指令分配的值；如 果浏览器为 old，则$ancient_browser 等于 ancient_browser_value 指令分配的值；如果浏览器为 MSIE 中的任意版本，则 $msie 等于 1）</td>
</tr>
<tr>
<td style="text-align:left">–without-http_upstream_ip_hash_module</td>
<td style="text-align:left">禁用 ngx_http_upstream_ip_hash_module 支持（该模块用于简单的负载均衡）</td>
</tr>
<tr>
<td style="text-align:left">–with-http_perl_module</td>
<td style="text-align:left">启用 ngx_http_perl_module 支持（该模块使 nginx 可以直接使用 perl 或通过 ssi 调用 perl）</td>
</tr>
<tr>
<td style="text-align:left">–with-perl_modules_path=</td>
<td style="text-align:left">设定 perl 模块路径</td>
</tr>
<tr>
<td style="text-align:left">–with-perl=</td>
<td style="text-align:left">设定 perl 库文件路径</td>
</tr>
<tr>
<td style="text-align:left">–http-log-path=</td>
<td style="text-align:left">设定 access log 路径</td>
</tr>
<tr>
<td style="text-align:left">–http-client-body-temp-path=</td>
<td style="text-align:left">设定 http 客户端请求临时文件路径</td>
</tr>
<tr>
<td style="text-align:left">–http-proxy-temp-path=</td>
<td style="text-align:left">设定 http 代理临时文件路径</td>
</tr>
<tr>
<td style="text-align:left">–http-fastcgi-temp-path=</td>
<td style="text-align:left">设定 http fastcgi 临时文件路径</td>
</tr>
<tr>
<td style="text-align:left">–http-uwsgi-temp-path=</td>
<td style="text-align:left">设定 http uwsgi 临时文件路径</td>
</tr>
<tr>
<td style="text-align:left">–http-scgi-temp-path=</td>
<td style="text-align:left">设定 http scgi 临时文件路径</td>
</tr>
<tr>
<td style="text-align:left">-without-http</td>
<td style="text-align:left">禁用 http server 功能</td>
</tr>
<tr>
<td style="text-align:left">–without-http-cache</td>
<td style="text-align:left">禁用 http cache 功能</td>
</tr>
<tr>
<td style="text-align:left">–with-mail</td>
<td style="text-align:left">启用 POP3/IMAP4/SMTP 代理模块支持</td>
</tr>
<tr>
<td style="text-align:left">–with-mail_ssl_module</td>
<td style="text-align:left">启用 ngx_mail_ssl_module 支持</td>
</tr>
<tr>
<td style="text-align:left">–without-mail_pop3_module</td>
<td style="text-align:left">禁用 pop3 协议（POP3 即邮局协议的第 3 个版本,它是规定个人计算机如何连接到互联网上的邮件服务器进行收发邮件的协议。是因特网电子邮件的第一个离线协议标 准,POP3 协议允许用户从服务器上把邮件存储到本地主机上,同时根据客户端的操作删除或保存在邮件服务器上的邮件。POP3 协议是 TCP/IP 协议族中的一员，主要用于 支持使用客户端远程管理在服务器上的电子邮件）</td>
</tr>
<tr>
<td style="text-align:left">–without-mail_imap_module</td>
<td style="text-align:left">禁用 imap 协议（一种邮件获取协议。它的主要作用是邮件客户端可以通过这种协议从邮件服务器上获取邮件的信息，下载邮件等。IMAP 协议运行在 TCP/IP 协议之上， 使用的端口是 143。它与 POP3 协议的主要区别是用户可以不用把所有的邮件全部下载，可以通过客户端直接对服务器上的邮件进行操作。）</td>
</tr>
<tr>
<td style="text-align:left">–without-mail_smtp_module</td>
<td style="text-align:left">禁用 smtp 协议（SMTP 即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。SMTP 协议属于 TCP/IP 协议族，它帮助每台计算机在发送或中转信件时找到下一个目的地。）</td>
</tr>
<tr>
<td style="text-align:left">–with-google_perftools_module</td>
<td style="text-align:left">启用 ngx_google_perftools_module 支持（调试用，剖析程序性能瓶颈）</td>
</tr>
<tr>
<td style="text-align:left">–with-cpp_test_module</td>
<td style="text-align:left">启用 ngx_cpp_test_module 支持</td>
</tr>
<tr>
<td style="text-align:left">–add-module=</td>
<td style="text-align:left">启用外部模块支持</td>
</tr>
<tr>
<td style="text-align:left">–with-cc=</td>
<td style="text-align:left">指向 C 编译器路径</td>
</tr>
<tr>
<td style="text-align:left">–with-cpp=</td>
<td style="text-align:left">指向 C 预处理路径</td>
</tr>
<tr>
<td style="text-align:left">–with-cc-opt=</td>
<td style="text-align:left">设置 C 编译器参数（PCRE 库，需要指定–with-cc-opt=”-I /usr/local/include”，如果使用 select()函数则需要同时增加文件描述符数量，可以通过–with-cc- opt=”-D FD_SETSIZE=2048”指定。）</td>
</tr>
<tr>
<td style="text-align:left">–with-ld-opt=</td>
<td style="text-align:left">设置连接文件参数。（PCRE 库，需要指定–with-ld-opt=”-L /usr/local/lib”。）</td>
</tr>
<tr>
<td style="text-align:left">–with-cpu-opt=</td>
<td style="text-align:left">指定编译的 CPU，可用的值为: pentium, pentiumpro, pentium3, pentium4, athlon,opteron, amd64, sparc32, sparc64, ppc64</td>
</tr>
<tr>
<td style="text-align:left">–without-pcre</td>
<td style="text-align:left">禁用 pcre 库</td>
</tr>
<tr>
<td style="text-align:left">–with-pcre</td>
<td style="text-align:left">启用 pcre 库</td>
</tr>
<tr>
<td style="text-align:left">–with-pcre=</td>
<td style="text-align:left">指向 pcre 库文件目录</td>
</tr>
<tr>
<td style="text-align:left">–with-pcre-opt=</td>
<td style="text-align:left">在编译时为 pcre 库设置附加参数</td>
</tr>
<tr>
<td style="text-align:left">–with-md5=</td>
<td style="text-align:left">指向 md5 库文件目录（消息摘要算法第五版，用以提供消息的完整性保护）</td>
</tr>
<tr>
<td style="text-align:left">–with-md5-opt=</td>
<td style="text-align:left">在编译时为 md5 库设置附加参数</td>
</tr>
<tr>
<td style="text-align:left">–with-md5-asm</td>
<td style="text-align:left">使用 md5 汇编源</td>
</tr>
<tr>
<td style="text-align:left">–with-sha1=</td>
<td style="text-align:left">指向 sha1 库目录（数字签名算法，主要用于数字签名）</td>
</tr>
<tr>
<td style="text-align:left">–with-sha1-opt=</td>
<td style="text-align:left">在编译时为 sha1 库设置附加参数</td>
</tr>
<tr>
<td style="text-align:left">–with-sha1-asm</td>
<td style="text-align:left">使用 sha1 汇编源</td>
</tr>
<tr>
<td style="text-align:left">–with-zlib=</td>
<td style="text-align:left">指向 zlib 库目录</td>
</tr>
<tr>
<td style="text-align:left">–with-zlib-opt=</td>
<td style="text-align:left">在编译时为 zlib 设置附加参数</td>
</tr>
<tr>
<td style="text-align:left">–with-zlib-asm=</td>
<td style="text-align:left">为指定的 CPU 使用 zlib 汇编源进行优化，CPU 类型为 pentium, pentiumpro</td>
</tr>
<tr>
<td style="text-align:left">–with-libatomic</td>
<td style="text-align:left">为原子内存的更新操作的实现提供一个架构</td>
</tr>
<tr>
<td style="text-align:left">–with-libatomic=</td>
<td style="text-align:left">指向 libatomic_ops 安装目录</td>
</tr>
<tr>
<td style="text-align:left">–with-openssl=</td>
<td style="text-align:left">指向 openssl 安装目录</td>
</tr>
<tr>
<td style="text-align:left">–with-openssl-opt</td>
<td style="text-align:left">在编译时为 openssl 设置附加参数</td>
</tr>
<tr>
<td style="text-align:left">–with-debug</td>
<td style="text-align:left">启用 debug 日志</td>
</tr>
</tbody>
</table>
]]></description>
</item><item>
    <title>nginx 重写规则 rewrite模块</title>
    <link>http://www.jobcher.com/nginx04/</link>
    <pubDate>Fri, 24 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/nginx04/</guid>
    <description><![CDATA[<h1 id="nginx-重写规则-rewrite-模块">nginx 重写规则 rewrite 模块</h1>
<h2 id="语法">语法</h2>
<table>
<thead>
<tr>
<th style="text-align:left">语法</th>
<th style="text-align:left">默认值</th>
<th style="text-align:left">使用字段</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">break</td>
<td style="text-align:left">none</td>
<td style="text-align:left">server, location, if</td>
<td style="text-align:left">完成当前设置的重写规则，停止执行其他的重写规则。</td>
</tr>
<tr>
<td style="text-align:left">set variable value</td>
<td style="text-align:left">none</td>
<td style="text-align:left">server, location, if</td>
<td style="text-align:left">为给定的变量设置一个特定值。</td>
</tr>
<tr>
<td style="text-align:left">return code</td>
<td style="text-align:left">none</td>
<td style="text-align:left">server, location, if</td>
<td style="text-align:left">停止处理并为客户端返回状态码。非标准的 444 状态码将关闭连接，不发送任何响应头。可以使用的状态码有：204，400，402-406，408，410, 411, 413, 416 与 500-504。如果状态码附带文字段落，该文本将被放置在响应主体。相反，如果状态码后面是一个 URL，该 URL 将成为 location 头补值。没有状态码的 URL 将被视为一个 302 状态码。</td>
</tr>
<tr>
<td style="text-align:left">rewrite_log on</td>
<td style="text-align:left">rewrite_log off</td>
<td style="text-align:left">server, location, if</td>
<td style="text-align:left">启用时将在 error log 中记录 notice 级别的重写日志。</td>
</tr>
<tr>
<td style="text-align:left">rewrite regex replacement flag</td>
<td style="text-align:left">none</td>
<td style="text-align:left">server, location, if</td>
<td style="text-align:left">按照相关的正则表达式与字符串修改 URI，指令按照在配置文件中出现的顺序执行。可以在重写指令后面添加标记。注意：如果替换的字符串以 http://开头，请求将被重定向，并且不再执行多余的 rewrite 指令。尾部的标记(flag)可以是以下的值：last – 停止处理重写模块指令，之后搜索 location 与更改后的 URI 匹配.break – 完成重写指令。redirect – 返回 302 临时重定向，如果替换字段用 http://开头则被使用。permanent – 返回 301 永久重定向。</td>
</tr>
<tr>
<td style="text-align:left">if (condition) { … }</td>
<td style="text-align:left">none</td>
<td style="text-align:left">server, location</td>
<td style="text-align:left">尽量考虑使用 trp_files 代替。判断的条件可以有以下值</td>
</tr>
</tbody>
</table>
<ol>
<li>一个变量的名称：空字符传”“或者一些“0”开始的字符串为 false。</li>
<li>字符串比较：使用=或!=运算符</li>
<li>正则表达式匹配：使用~(区分大小写)和~<em>(不区分大小写)，取反运算!~和!~</em>。</li>
<li>文件是否存在：使用-f 和!-f 操作符</li>
<li>目录是否存在：使用-d 和!-d 操作符</li>
<li>文件、目录、符号链接是否存在：使用-e 和!-e 操作符</li>
<li>文件是否可执行：使用-x 和!-x 操作符'|</li>
</ol>
<h2 id="rewrite-重写规则">rewrite 重写规则</h2>
<p>正则表达式</p>
]]></description>
</item><item>
    <title>nginx.conf 配置文件详解</title>
    <link>http://www.jobcher.com/nginx03/</link>
    <pubDate>Fri, 24 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/nginx03/</guid>
    <description><![CDATA[<h1 id="nginxconf-配置文件详解">nginx.conf 配置文件详解</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1"># vim nginx.conf</span>
</span></span><span class="line"><span class="cl">user nobody nobody<span class="p">;</span> <span class="c1"># 运行 nginx 的所属组和所有者</span>
</span></span><span class="line"><span class="cl">worker_processes 2<span class="p">;</span> <span class="c1"># 开启两个 nginx 工作进程,一般几个 CPU 核心就写几</span>
</span></span><span class="line"><span class="cl">error_log logs/error.log notice<span class="p">;</span> <span class="c1"># 错误日志路径</span>
</span></span><span class="line"><span class="cl">pid logs/nginx.pid<span class="p">;</span> <span class="c1"># pid 路径</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">events
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    worker_connections 1024<span class="p">;</span> <span class="c1"># 一个进程能同时处理 1024 个请求</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">http
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    include mime.types<span class="p">;</span>
</span></span><span class="line"><span class="cl">    default_type application/octet-stream<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    log_format main ‘<span class="nv">$remote_addr</span> – <span class="nv">$remote_user</span> <span class="o">[</span><span class="nv">$time_local</span><span class="o">]</span> “<span class="nv">$request</span>” ‘
</span></span><span class="line"><span class="cl">    ‘<span class="nv">$status</span> <span class="nv">$body_bytes_sent</span> “<span class="nv">$http_referer</span>” ‘
</span></span><span class="line"><span class="cl">    ‘”<span class="nv">$http_user_agent</span>” “<span class="nv">$http_x_forwarded_for</span>”‘<span class="p">;</span>
</span></span><span class="line"><span class="cl">    access_log logs/access.log main<span class="p">;</span> <span class="c1"># 默认访问日志路径</span>
</span></span><span class="line"><span class="cl">    sendfile on<span class="p">;</span>
</span></span><span class="line"><span class="cl">    keepalive_timeout 65<span class="p">;</span> <span class="c1"># keepalive 超市时间</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 开始配置一个域名,一个 server 配置段一般对应一个域名</span>
</span></span><span class="line"><span class="cl">    server
</span></span><span class="line"><span class="cl">    <span class="o">{</span>
</span></span><span class="line"><span class="cl">        listen 80<span class="p">;</span> <span class="c1">#</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 在本机所有 ip 上监听 80,也可以写为 192.168.1.202:80,这样的话,就只监听 192.168.1.202 上的 80 口</span>
</span></span><span class="line"><span class="cl">        server_name www.nbtyfood.com<span class="p">;</span> <span class="c1"># 域名</span>
</span></span><span class="line"><span class="cl">        root /www/html/www.nbtyfood.com<span class="p">;</span> <span class="c1"># 站点根目录（程序目录）</span>
</span></span><span class="line"><span class="cl">        index index.html index.htm<span class="p">;</span> <span class="c1"># 索引文件</span>
</span></span><span class="line"><span class="cl">        location /
</span></span><span class="line"><span class="cl">        <span class="o">{</span> <span class="c1"># 可以有多个 location</span>
</span></span><span class="line"><span class="cl">            root /www/html/www.nbtyfood.com<span class="p">;</span> <span class="c1"># 站点根目录（程序目录）</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        error_page <span class="m">500</span> <span class="m">502</span> <span class="m">503</span> <span class="m">504</span> /50x.html<span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 定义错误页面,如果是 500 错误,则把站点根目录下的 50x.html 返回给用户</span>
</span></span><span class="line"><span class="cl">        <span class="nv">location</span> <span class="o">=</span> /50x.html <span class="o">{</span>
</span></span><span class="line"><span class="cl">        root /www/html/www.nbtyfood.com<span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 开始配置站点 bbs.nbtyfood.com</span>
</span></span><span class="line"><span class="cl">    server
</span></span><span class="line"><span class="cl">    <span class="o">{</span>
</span></span><span class="line"><span class="cl">        listen 80<span class="p">;</span>
</span></span><span class="line"><span class="cl">        server_name bbs.nbtyfood.com<span class="p">;</span>
</span></span><span class="line"><span class="cl">        root /www/html/bbs.nbtyfood.com<span class="p">;</span>
</span></span><span class="line"><span class="cl">        index index.html index.htm<span class="p">;</span> <span class="c1"># 索引文件</span>
</span></span><span class="line"><span class="cl">        location /
</span></span><span class="line"><span class="cl">        <span class="o">{</span>
</span></span><span class="line"><span class="cl">            root /www/html/bbs.nbtyfood.com<span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        error_page <span class="m">500</span> <span class="m">502</span> <span class="m">503</span> <span class="m">504</span> /50x.html<span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">location</span> <span class="o">=</span> /50x.html <span class="o">{</span>
</span></span><span class="line"><span class="cl">            root /www/html/bbs.nbtyfood.com<span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>nginx 日志格式整理</title>
    <link>http://www.jobcher.com/nginx01/</link>
    <pubDate>Mon, 13 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/nginx01/</guid>
    <description><![CDATA[<h1 id="nginx-日志配置">nginx 日志配置</h1>
<h2 id="语法">语法</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">access_log path [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]]; # 设置访问日志
</span></span><span class="line"><span class="cl">access_log off; # 关闭访问日志
</span></span></code></pre></td></tr></table>
</div>
</div><p>例子：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">access_log /var/logs/nginx-access.log
</span></span><span class="line"><span class="cl">access_log /var/logs/nginx-access.log buffer=32k gzip flush=1m
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="使用-log_format-自定义日志格式">使用 log_format 自定义日志格式</h2>
<p>Nginx 预定义了名为 combined 日志格式，如果没有明确指定日志格式默认使用该格式：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">log_format combined &#39;$remote_addr - $remote_user [$time_local] &#39;
</span></span><span class="line"><span class="cl">                    &#39;&#34;$request&#34; $status $body_bytes_sent &#39;
</span></span><span class="line"><span class="cl">                    &#39;&#34;$http_referer&#34; &#34;$http_user_agent&#34;&#39;;
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果不想使用 Nginx 预定义的格式，可以通过 log_format 指令来自定义。</p>
<h3 id="语法-1">语法</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">log_format name [escape=default|json] string ...;
</span></span></code></pre></td></tr></table>
</div>
</div><table>
<thead>
<tr>
<th style="text-align:left">变量</th>
<th style="text-align:left">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">$bytes_sent</td>
<td style="text-align:left">发送给客户端的总字节数</td>
</tr>
<tr>
<td style="text-align:left">$body_bytes_sent</td>
<td style="text-align:left">发送给客户端的字节数，不包括响应头的大小</td>
</tr>
<tr>
<td style="text-align:left">$connection</td>
<td style="text-align:left">连接序列号</td>
</tr>
<tr>
<td style="text-align:left">$connection_requests</td>
<td style="text-align:left">当前通过连接发出的请求数量</td>
</tr>
<tr>
<td style="text-align:left">$msec</td>
<td style="text-align:left">日志写入时间，单位为秒，精度是毫秒</td>
</tr>
<tr>
<td style="text-align:left">$pipe</td>
<td style="text-align:left">如果请求是通过 http 流水线发送，则其值为&quot;p&quot;，否则为“.&quot;</td>
</tr>
<tr>
<td style="text-align:left">$request_length</td>
<td style="text-align:left">请求长度（包括请求行，请求头和请求体）</td>
</tr>
<tr>
<td style="text-align:left">$request_time</td>
<td style="text-align:left">请求处理时长，单位为秒，精度为毫秒，从读入客户端的第一个字节开始，直到把最后一个字符发送张客户端进行日志写入为止</td>
</tr>
<tr>
<td style="text-align:left">$status</td>
<td style="text-align:left">响应状态码</td>
</tr>
<tr>
<td style="text-align:left">$time_iso8601</td>
<td style="text-align:left">标准格式的本地时间,形如“2017-05-24T18:31:27+08:00”</td>
</tr>
<tr>
<td style="text-align:left">$time_local</td>
<td style="text-align:left">通用日志格式下的本地时间，如&quot;24/May/2017:18:31:27 +0800&quot;</td>
</tr>
<tr>
<td style="text-align:left">$http_referer</td>
<td style="text-align:left">请求的 referer 地址。</td>
</tr>
<tr>
<td style="text-align:left">$http_user_agent</td>
<td style="text-align:left">客户端浏览器信息。</td>
</tr>
<tr>
<td style="text-align:left">$remote_addr</td>
<td style="text-align:left">客户端 IP</td>
</tr>
<tr>
<td style="text-align:left">$http_x_forwarded_for</td>
<td style="text-align:left">当前端有代理服务器时，设置 web 节点记录客户端地址的配置，此参数生效的前提是代理服务器也要进行相关的 x_forwarded_for 设置。</td>
</tr>
<tr>
<td style="text-align:left">$request</td>
<td style="text-align:left">完整的原始请求行，如 &ldquo;GET / HTTP/1.1&rdquo;</td>
</tr>
<tr>
<td style="text-align:left">$remote_user</td>
<td style="text-align:left">客户端用户名称，针对启用了用户认证的请求</td>
</tr>
<tr>
<td style="text-align:left">$request_uri</td>
<td style="text-align:left">完整的请求地址，如 &ldquo;<a href="https://daojia.com/%22" target="_blank" rel="noopener noreffer">https://daojia.com/"</a></td>
</tr>
</tbody>
</table>
<p>例子：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">access_log /var/logs/nginx-access.log main
</span></span><span class="line"><span class="cl">log_format  main  &#39;$remote_addr - $remote_user [$time_local] &#34;$request&#34; &#39;
</span></span><span class="line"><span class="cl">                  &#39;$status $body_bytes_sent &#34;$http_referer&#34; &#39;
</span></span><span class="line"><span class="cl">                  &#39;&#34;$http_user_agent&#34; &#34;$http_x_forwarded_for&#34;&#39;;
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>nginx 汇总</title>
    <link>http://www.jobcher.com/nginx/</link>
    <pubDate>Wed, 08 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/nginx/</guid>
    <description><![CDATA[<h1 id="nginx-汇总">nginx 汇总</h1>
<p>各类 nginx 问题汇总</p>
<h2 id="安装-nginx">安装 nginx</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    <span class="c1">#centos</span>
</span></span><span class="line"><span class="cl">    yum install nginx
</span></span><span class="line"><span class="cl">    <span class="c1">#ubuntu</span>
</span></span><span class="line"><span class="cl">    apt install nginx
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="http-代理">http 代理</h2>
<h3 id="正向代理">正向代理</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    server <span class="o">{</span>
</span></span><span class="line"><span class="cl">        listen       80<span class="p">;</span>
</span></span><span class="line"><span class="cl">        server_name  www.nbtyfood.com<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        location / <span class="o">{</span>
</span></span><span class="line"><span class="cl">            proxy_pass http://127.0.0.1:8080<span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="反向代理">反向代理</h3>
<h2 id="负载均衡">负载均衡</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    upstream mysvr <span class="o">{</span>
</span></span><span class="line"><span class="cl">    server 192.168.10.121:3333<span class="p">;</span>
</span></span><span class="line"><span class="cl">    server 192.168.10.122:3333<span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">    server <span class="o">{</span>
</span></span><span class="line"><span class="cl">        ....
</span></span><span class="line"><span class="cl">        location  ~*^.+$ <span class="o">{</span>
</span></span><span class="line"><span class="cl">            proxy_pass  http://mysvr<span class="p">;</span>  <span class="c1">#请求转向mysvr 定义的服务器列表</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol>
<li>热备<br>
如果你有 2 台服务器，当一台服务器发生事故时，才启用第二台服务器给提供服务。服务器处理请求的顺序：AAAAAA 突然 A 挂啦，BBBBBBBBBBBBBB&hellip;..</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    upstream mysvr <span class="o">{</span>
</span></span><span class="line"><span class="cl">    server 127.0.0.1:7878<span class="p">;</span>
</span></span><span class="line"><span class="cl">    server 192.168.10.121:3333 backup<span class="p">;</span>  <span class="c1">#热备</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>轮询<br>
nginx 默认就是轮询其权重都默认为 1，服务器处理请求的顺序：ABABABABAB&hellip;.</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    upstream mysvr <span class="o">{</span>
</span></span><span class="line"><span class="cl">    server 127.0.0.1:7878<span class="p">;</span>
</span></span><span class="line"><span class="cl">    server 192.168.10.121:3333<span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>加权轮询<br>
跟据配置的权重的大小而分发给不同服务器不同数量的请求。如果不设置，则默认为 1。下面服务器的请求顺序为：ABBABBABBABBABB&hellip;.</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    upstream mysvr <span class="o">{</span>
</span></span><span class="line"><span class="cl">    server 127.0.0.1:7878 <span class="nv">weight</span><span class="o">=</span>1<span class="p">;</span>w
</span></span><span class="line"><span class="cl">    server 192.168.10.121:3333 <span class="nv">weight</span><span class="o">=</span>2<span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>ip_hash
nginx 会让相同的客户端 ip 请求相同的服务器。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    upstream mysvr <span class="o">{</span>
</span></span><span class="line"><span class="cl">    server 127.0.0.1:7878<span class="p">;</span>
</span></span><span class="line"><span class="cl">    server 192.168.10.121:3333<span class="p">;</span>
</span></span><span class="line"><span class="cl">    ip_hash<span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="web-缓存">web 缓存</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    location /images/ <span class="o">{</span>
</span></span><span class="line"><span class="cl">    proxy_cache my_cache<span class="p">;</span>
</span></span><span class="line"><span class="cl">    proxy_ignore_headers Cache-Control<span class="p">;</span>
</span></span><span class="line"><span class="cl">    proxy_cache_valid any 30m<span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># ...</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="重定向">重定向</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">    rewrite ^/<span class="o">(</span>.*<span class="o">)</span> http://www.nbtyfood.com/<span class="nv">$1</span> permanent<span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
