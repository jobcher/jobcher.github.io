<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>k8s - 分类 - 打工人日志 - jobcher</title>
        <link>http://www.jobcher.com/categories/k8s/</link>
        <description>k8s - 分类 - 打工人日志 - jobcher</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>nb@nbtyfood.com (jobcher)</managingEditor>
            <webMaster>nb@nbtyfood.com (jobcher)</webMaster><lastBuildDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://www.jobcher.com/categories/k8s/" rel="self" type="application/rss+xml" /><item>
    <title>kubernetes 部署插件 (Flannel、Web UI、CoreDNS、Ingress Controller)</title>
    <link>http://www.jobcher.com/k8s11/</link>
    <pubDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s11/</guid>
    <description><![CDATA[<h1 id="k8s部署插件">k8s部署插件</h1>
<p><code>Kubernetes</code> 是高度可配置且可扩展的。因此，大多数情况下， 你不需要派生自己的 Kubernetes 副本或者向项目代码提交补丁，本文会介绍几种常用的k8s插件，如果大家喜欢的话，希望大家点赞支持。</p>
<h2 id="1-flannel-网络插件">1. Flannel 网络插件</h2>
<p><code>Flannel</code>是由go语言开发，是一种基于Overlay 网络的<code>跨主机容器网络解决方案</code>，也就是将<code>TCP数据包</code>封装在另一种网络包里面进行<code>路由转发和通信</code>，Flannel 是CoreOS 开发，专门用于docker多主机互联的一个工具，简单来说，它的功能是<code>让集群中的不同节点主机创建的容器都具有全局唯一的虚拟IP地址</code><br>
主要功能：</p>
<ul>
<li>为每个 node 分配 subnet，容器将自动从该子网中获取 IP 地址</li>
<li>当有 node 加入到网络中时，为每个 node 增加路由配置</li>
</ul>
<p></p>
<h3 id="下载并安装">下载并安装</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
</span></span><span class="line"><span class="cl">kubectl apply -f kube-flannel.yml
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果yml中的&quot;Network&quot;: <code>10.244.0.0/16</code>和<code>kubeadm init xxx --pod-network-cidr</code>不一样，就需要修改成一样的。不然可能会使得<code>Node</code>间<code>Cluster IP</code>不通。</p>
<h2 id="2-ingress-controller">2. Ingress Controller</h2>
<p><code>Ingress</code> 是对集群中服务的外部访问进行管理的 API 对象，典型的访问方式是 HTTP。<br>
<code>Ingress</code> 可以提供负载均衡、SSL 终结和基于名称的虚拟托管<br>
下面是一个将所有流量都发送到同一 Service 的简单 Ingress 示例：<br>
</p>
<p><code>Ingress</code> 可为 <code>Service</code> 提供外部可访问的 URL、负载均衡流量、终止 SSL/TLS，以及基于名称的虚拟托管。 <code>Ingress 控制器</code> 通常负责通过负载均衡器来实现 Ingress，尽管它也可以配置边缘路由器或其他前端来帮助处理流量。</p>
<p><code>Ingress 不会公开</code>任意端口或协议。 将 <code>HTTP</code> 和 <code>HTTPS</code> 以外的服务公开到 <code>Internet</code> 时，通常使用 <code>Service</code>.<code>Type=NodePort</code> 或 Service.<code>Type=LoadBalancer</code> 类型的 Service</p>
<h3 id="其他">其他</h3>
<p>为了让 <code>Ingress</code> 资源工作，集群必须有一个正在运行的 <code>Ingress 控制器</code>。</p>
<p>与作为 <code>kube-controller-manager</code> 可执行文件的一部分运行的其他类型的控制器不同， Ingress 控制器不是随集群自动启动的。 基于此页面，你可选择最适合你的集群的 ingress 控制器实现。</p>
<h2 id="3-coredns">3. CoreDNS</h2>
<p><code>CoreDNS</code> 是一个灵活可扩展的 <code>DNS 服务器</code>，可以作为 <code>Kubernetes 集群 DNS</code>。 与 Kubernetes 一样，CoreDNS 项目由 CNCF 托管。<br>
在 <code>Kubernetes 1.21</code> 版本中，<code>kubeadm</code> 移除了对将 <code>kube-dns</code> 作为 DNS 应用的支持。 对于 <code>kubeadm v1.25</code>，所支持的唯一的集群 DNS 应用是 <code>CoreDNS</code>。</p>
<p>当你使用 <code>kubeadm</code> 升级使用 <code>kube-dns</code> 的集群时，你还可以执行到 <code>CoreDNS</code> 的迁移。 在这种场景中，<code>kubeadm</code> 将基于 <code>kube-dns ConfigMap</code> 生成 <code>CoreDNS</code> 配置<code>（&quot;Corefile&quot;）</code>， 保存存根域和上游名称服务器的配置。</p>
<p>通过替换现有集群部署中的 <code>kube-dns</code>，或者使用 kubeadm 等工具来为你部署和升级集群， 可以在你的集群中使用 CoreDNS 而非 kube-dns
你必须拥有一个 <code>Kubernetes 的集群</code>，同时你的 Kubernetes 集群必须带有 <code>kubectl 命令行工具</code>。 建议在至少有两个节点的集群上运行本教程，且这些节点不作为控制平面主机。</p>
<h2 id="4-web-ui">4. Web UI</h2>
<p><code>Dashboard</code> 是基于网页的 <code>Kubernetes</code> 用户界面。 你可以使用 <code>Dashboard</code> 将容器应用部署到 <code>Kubernetes</code> 集群中，也可以对容器应用排错，还能管理集群资源。 你可以使用 <code>Dashboard</code> 获取运行在集群中的应用的概览信息，也可以创建或者修改 <code>Kubernetes</code> 资源 （如 <code>Deployment，Job，DaemonSet</code> 等等）。 例如，你可以对 <code>Deployment</code> 实现弹性伸缩、发起滚动升级、重启 <code>Pod</code> 或者使用向导创建新的应用<br>
</p>
<h3 id="安装">安装</h3>
<p>默认情况下不会部署 <code>Dashboard</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1">#https 方式</span>
</span></span><span class="line"><span class="cl">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.6.1/aio/deploy/recommended.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 或者 http方式 </span>
</span></span><span class="line"><span class="cl">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.6.1/aio/deploy/alternative.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="暴露外部连接">暴露外部连接</h3>
<p>创建 <code>webUIservice.yaml</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">vim webUIservice.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用loadBalancer</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">k8s-app</span><span class="p">:</span><span class="w"> </span><span class="l">kubernetes-dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">kubernetes-dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">namespace</span><span class="p">:</span><span class="w"> </span><span class="l">kubernetes-dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">annotations</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb.kubesphere.io/v1alpha1</span><span class="p">:</span><span class="w"> </span><span class="l">openelb</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">protocol.openelb.kubesphere.io/v1alpha1</span><span class="p">:</span><span class="w"> </span><span class="l">layer2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">eip.openelb.kubesphere.io/v1alpha2</span><span class="p">:</span><span class="w"> </span><span class="l">layer2-eip</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">protocol</span><span class="p">:</span><span class="w"> </span><span class="l">TCP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">targetPort</span><span class="p">:</span><span class="w"> </span><span class="m">9090</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">selector</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">k8s-app</span><span class="p">:</span><span class="w"> </span><span class="l">kubernetes-dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">LoadBalancer</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>kubectl apply -f webUIservice.yaml</p>
</blockquote>
<h3 id="创建并获取token">创建并获取token</h3>
<p>创建管理员</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl create serviceaccount dashboard-admin -n kube-system
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl create clusterrolebinding dashboard-admin --clusterrole<span class="o">=</span>cluster-admin --serviceaccount<span class="o">=</span>kube-system:dashboard-admin
</span></span></code></pre></td></tr></table>
</div>
</div><p>获取token</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl describe secrets -n kube-system <span class="k">$(</span>kubectl -n kube-system get secret <span class="p">|</span> grep dashboard-admin <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span><span class="k">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>kubernetes 存储</title>
    <link>http://www.jobcher.com/k8s10/</link>
    <pubDate>Mon, 01 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s10/</guid>
    <description><![CDATA[<h1 id="kubernetes-存储">kubernetes 存储</h1>
<p>k8s支持多种途径的多种类型的存储。例如iSCSI,SMB,NFS，以及对象存储。都是不同类型的部署在云上或者自建数据中心的外部存储系统。k8s上的所有存储都被称作<code>卷</code></p>
<h2 id="csi-容器存储接口">CSI 容器存储接口</h2>
<p>CSI是k8s存储体系中一部分，是一个开源项目，定义了一套基于标准的接口，从而使容器能够以一种统一的方式被不同的容器编排的工具使用。可以将插件称为<code>provisioner</code></p>
<h2 id="持久化">持久化</h2>
<ul>
<li>持久化卷 （pv）</li>
<li>持久化卷申请 （pvc）</li>
<li>存储类 （sv）</li>
</ul>
<p>PV 代表k8s的存储，pvc代表的是许可证，赋予pod访问pv的权限。cs使分配过程是动态的。</p>
<h2 id="使用iscsi操作存储">使用iSCSI操作存储</h2>
<p><code>iscsi</code> 卷能将 iSCSI (基于 IP 的 SCSI) 卷挂载到你的 Pod 中。 不像 emptyDir 那样会在删除 Pod 的同时也会被删除，iscsi 卷的内容在删除 Pod 时会被保留，卷只是被卸载。 这意味着 iscsi 卷可以被预先填充数据，并且这些数据可以在 Pod 之间共享。<br>
<code>iSCSI</code> 的一个特点是它可以同时被多个用户以只读方式挂载。 这意味着你可以用数据集预先填充卷，然后根据需要在尽可能多的 Pod 上使用它。 不幸的是，iSCSI 卷只能由单个使用者以读写模式挂载。不允许同时写入。</p>
<h3 id="创建-iscsi-pvyaml-iscsi-pvcyaml">创建 iscsi-pv.yaml iscsi-pvc.yaml</h3>
<p>iscsi-pv.yaml</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">PersistentVolume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">iscsi-pv</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">capacity</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">storage</span><span class="p">:</span><span class="w"> </span><span class="l">500Gi</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">accessModes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ReadWriteOnce</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">iscsi</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">targetPortal</span><span class="p">:</span><span class="w"> </span><span class="m">10.12.12</span><span class="l">.xxx:3260</span><span class="w"> </span><span class="c"># 修改</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">iqn</span><span class="p">:</span><span class="w"> </span><span class="l">iqn.2000-01.com.synology:xxx.Target-1.21xxxxx344</span><span class="w"> </span><span class="c"># 修改</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lun</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>iscsi-pvc.yaml</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">PersistentVolume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">iscsi-pv</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">capacity</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">storage</span><span class="p">:</span><span class="w"> </span><span class="l">500Gi</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">accessModes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">ReadWriteOnce</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">iscsi</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">targetPortal</span><span class="p">:</span><span class="w"> </span><span class="m">10.12.12</span><span class="l">.xxx:3260</span><span class="w"> </span><span class="c"># 修改</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">iqn</span><span class="p">:</span><span class="w"> </span><span class="l">iqn.2000-01.com.synology:xxx.Target-1.21xxxxx344</span><span class="w"> </span><span class="c"># 修改</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lun</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>kubernetes 从1.23.x 升级到 1.24.x</title>
    <link>http://www.jobcher.com/k8s9/</link>
    <pubDate>Wed, 29 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s9/</guid>
    <description><![CDATA[<h1 id="kubernetes-从123x-升级到-124x">kubernetes 从<code>1.23.x</code> 升级到 <code>1.24.x</code></h1>
<p>k8s 在<code>1.24.x</code>之后的版本放弃了和docker的兼容，使用containerd 作为底层的容器，直接参照官方文档的资料进行更新就会报错。因为你没有安装containerd，所以要安装containerd并配置才能正确的升级k8s<br>
我用的是<code>CentOS7.9</code>的版本，因此以下操作都是在<code>CentOS</code>下操作。</p>
<h2 id="master-节点操作">Master 节点操作</h2>
<h3 id="1升级kubeadm">1.升级kubeadm</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">yum install -y kubeadm-1.24.2-0 --disableexcludes<span class="o">=</span>kubernetes
</span></span><span class="line"><span class="cl">kubeadm version
</span></span><span class="line"><span class="cl">kubeadm upgrade plan
</span></span><span class="line"><span class="cl">sudo kubeadm upgrade apply v1.24.2
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="2安装containerd">2.安装containerd</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">yum install containerd.io -y
</span></span><span class="line"><span class="cl">containerd config default &gt; /etc/containerd/config.toml
</span></span><span class="line"><span class="cl">vim /var/lib/kubelet/kubeadm-flags.env
</span></span></code></pre></td></tr></table>
</div>
</div><p>修改kubeadm-flags.env 变量：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nv">KUBELET_KUBEADM_ARGS</span><span class="o">=</span><span class="s2">&#34;--pod-infra-container-image=k8s.gcr.io/pause:3.6 --container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3升级kubelet">3.升级kubelet</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">yum install -y kubelet-1.24.2-0 kubectl-1.24.2-0 --disableexcludes<span class="o">=</span>kubernetes
</span></span><span class="line"><span class="cl">systemctl daemon-reload <span class="o">&amp;&amp;</span> systemctl restart containerd  <span class="o">&amp;&amp;</span> systemctl restart kubelet
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看状态：</p>
<blockquote>
<p>kubectl get nodes<br>
systemctl status kubelet</p>
</blockquote>
<h2 id="worker-节点操作">Worker 节点操作</h2>
<h3 id="1升级kubeadm-1">1.升级kubeadm</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">yum install -y kubeadm-1.24.2-0 --disableexcludes<span class="o">=</span>kubernetes
</span></span><span class="line"><span class="cl">kubeadm version
</span></span><span class="line"><span class="cl">kubeadm upgrade plan
</span></span><span class="line"><span class="cl">sudo kubeadm upgrade node
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="2安装containerd-1">2.安装containerd</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">yum install containerd.io -y
</span></span><span class="line"><span class="cl">containerd config default &gt; /etc/containerd/config.toml
</span></span><span class="line"><span class="cl">vim /var/lib/kubelet/kubeadm-flags.env
</span></span></code></pre></td></tr></table>
</div>
</div><p>修改kubeadm-flags.env 变量：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="nv">KUBELET_KUBEADM_ARGS</span><span class="o">=</span><span class="s2">&#34;--pod-infra-container-image=k8s.gcr.io/pause:3.6 --container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3升级kubelet-1">3.升级kubelet</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">yum install -y kubelet-1.24.2-0 kubectl-1.24.2-0 --disableexcludes<span class="o">=</span>kubernetes
</span></span><span class="line"><span class="cl">systemctl daemon-reload <span class="o">&amp;&amp;</span> systemctl restart containerd  <span class="o">&amp;&amp;</span> systemctl restart kubelet
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看状态：</p>
<blockquote>
<p>systemctl status kubelet</p>
</blockquote>
<h3 id="4优化的维护节点">4.优化的维护节点</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1"># 设置为不可调度</span>
</span></span><span class="line"><span class="cl">kubectl cordon &lt;nodename&gt;
</span></span><span class="line"><span class="cl"><span class="c1"># 优雅排出容器</span>
</span></span><span class="line"><span class="cl">kubectl drain &lt;nodename&gt; --ignore-daemonsets --delete-emptydir-data
</span></span><span class="line"><span class="cl"><span class="c1"># 确认维护完成之后，恢复正常</span>
</span></span><span class="line"><span class="cl">kubectl uncordon &lt;nodename&gt;
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>编写 kubernetes 资源描述文件</title>
    <link>http://www.jobcher.com/k8s8/</link>
    <pubDate>Mon, 27 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s8/</guid>
    <description><![CDATA[<h1 id="编写-kubernetes-资源描述文件">编写 kubernetes 资源描述文件</h1>
<h3 id="1-部署一个应用">1. 部署一个应用</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">apps/v1	#与k8s集群版本有关，使用 kubectl api-versions 即可查看当前集群支持的版本</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Deployment	#该配置的类型，我们使用的是 Deployment</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">metadata:	       </span><span class="w"> </span><span class="c">#译名为元数据，即 Deployment 的一些基本属性和信息</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx-deployment	#Deployment 的名称</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">labels:	   </span><span class="w"> </span><span class="c">#标签，可以灵活定位一个或多个资源，其中key和value均可自定义，可以定义多组，目前不需要理解</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx	#为该Deployment设置key为app，value为nginx的标签</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">spec:	       </span><span class="w"> </span><span class="c">#这是关于该Deployment的描述，可以理解为你期待该Deployment在k8s中如何使用</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">replicas</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">	</span><span class="c">#使用该Deployment创建一个应用程序实例</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">selector:	   </span><span class="w"> </span><span class="c">#标签选择器，与上面的标签共同作用，目前不需要理解</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">matchLabels</span><span class="p">:</span><span class="w"> </span><span class="c">#选择包含标签app:nginx的资源</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">template:	   </span><span class="w"> </span><span class="c">#这是选择或创建的Pod的模板</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="l">metadata:	#Pod的元数据</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="l">labels:	#Pod的标签，上面的selector即选择包含标签app:nginx的Pod</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="l">spec:	   </span><span class="w"> </span><span class="c">#期望Pod实现的功能（即在pod中部署）</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="l">containers:	#生成container，与docker中的container是同一种</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx	#container的名称</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx:1.7.9	#使用镜像nginx:1.7.9创建container，该container默认80端口可访问</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>kubectl apply -f xxx.yaml</p>
</blockquote>
<h3 id="2暴露应用">2、暴露应用</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx-service	#Service 的名称</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">labels</span><span class="p">:</span><span class="w">     	</span><span class="c">#Service 自己的标签</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx	#为该 Service 设置 key 为 app，value 为 nginx 的标签</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">spec:	   </span><span class="w"> </span><span class="c">#这是关于该 Service 的定义，描述了 Service 如何选择 Pod，如何被访问</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">selector:	   </span><span class="w"> </span><span class="c">#标签选择器</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx	#选择包含标签 app:nginx 的 Pod</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx-port	#端口的名字</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">protocol</span><span class="p">:</span><span class="w"> </span><span class="l">TCP	   </span><span class="w"> </span><span class="c">#协议类型 TCP/UDP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">	        </span><span class="c">#集群内的其他容器组可通过 80 端口访问 Service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">nodePort</span><span class="p">:</span><span class="w"> </span><span class="m">32600</span><span class="w">   </span><span class="c">#通过任意节点的 32600 端口访问 Service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">targetPort</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">	</span><span class="c">#将请求转发到匹配 Pod 的 80 端口</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">NodePort	#Serive的类型，ClusterIP/NodePort/LoaderBalancer</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3扩缩容">3、扩缩容</h3>
<p>修改deployment.yaml 中的 replicas 属性即可</p>
<p>完成后运行  <code>kubectl apply -f xxx.yaml</code></p>
<h3 id="4滚动升级">4、滚动升级</h3>
<p>修改deployment.yaml 中的 imageName 属性等</p>
<p>完成后运行  <code>kubectl apply -f xxx.yaml</code></p>
]]></description>
</item><item>
    <title>kubernetes manual expansion</title>
    <link>http://www.jobcher.com/k8s7/</link>
    <pubDate>Mon, 13 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s7/</guid>
    <description><![CDATA[<h1 id="k8s-manual-expansion">k8s manual expansion</h1>
<p>We find k8s-master node.Input the Command：</p>
<ol>
<li>expand</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl scale --replicas<span class="o">=</span><span class="m">3</span> deploy my-test-deploy
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>shrink</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl scale --replicas<span class="o">=</span><span class="m">1</span> deploy my-test-deploy
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="trouble-cleaning">trouble cleaning</h2>
<ol>
<li>get resource list</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl get deployment
</span></span><span class="line"><span class="cl">kubectl get pods
</span></span><span class="line"><span class="cl">kubectl get nodes
</span></span><span class="line"><span class="cl"><span class="c1"># exists in the namespace</span>
</span></span><span class="line"><span class="cl">kubectl api-resources --namespaced<span class="o">=</span><span class="nb">true</span>
</span></span><span class="line"><span class="cl"><span class="c1"># not exists in the namespace</span>
</span></span><span class="line"><span class="cl">kubectl api-resources --namespaced<span class="o">=</span><span class="nb">false</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>show info</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl describe pod my-test-pod
</span></span><span class="line"><span class="cl">kubectl describe deployment my-test-pod
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>exec container</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl <span class="nb">exec</span> -ti my-test-pod /bin/bash
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>kubernetes 调度过程</title>
    <link>http://www.jobcher.com/k8s6/</link>
    <pubDate>Thu, 21 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s6/</guid>
    <description><![CDATA[<h1 id="k8s-调度过程">k8s 调度过程</h1>
<p></p>
<h2 id="执行滚动升级">执行滚动升级</h2>
<p>修改deployment.yml文件，追加rollingUpdate</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># 部署应用</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">apps/v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Deployment</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">jobcher-blog-deployment</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">jobcher-blog	</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">spec:	        </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">replicas</span><span class="p">:</span><span class="w"> </span><span class="m">3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">selector</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">matchLabels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">jobcher-blog</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">minReadySeconds</span><span class="p">:</span><span class="w"> </span><span class="m">10</span><span class="w"> </span><span class="c">#准备10s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">strategy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">RollingUpdate</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">rollingUpdate</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">maxUnavailable</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w"> </span><span class="c">#更新期间不少于3-1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">maxSurge</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w"> </span><span class="c">#更新期间不超过3+1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">template</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">jobcher-blog</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">containers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">jobcher-blog-pod</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">hub.docker.com/blog/hugo:latest</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>执行命令</p>
<blockquote>
<p>kubectl rollout restart deployment jobcher-blog-deployment</p>
</blockquote>
]]></description>
</item><item>
    <title>k8s本地联调神器kt-connect</title>
    <link>http://www.jobcher.com/kt-connect/</link>
    <pubDate>Thu, 14 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/kt-connect/</guid>
    <description><![CDATA[<h1 id="k8s本地联调神器kt-connect">k8s本地联调神器kt-connect</h1>
<p><a href="https://www.bboy.app/2022/04/11/k8s%E6%9C%AC%E5%9C%B0%E8%81%94%E8%B0%83%E7%A5%9E%E5%99%A8kt-connect/" target="_blank" rel="noopener noreffer">转载自Bboysoul&rsquo;sBlog</a><br>
k8s集群内部的服务网络怎么和我们本地网络打通。kt-connect就是用来解决这个问题的</p>
<h2 id="使用方法">使用方法</h2>
<p>下载安装什么的都很简单，一个二进制而已</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">https://github.com/alibaba/kt-connect
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果你安装好了，那么直接使用下面的命令使用就好了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">sudo ktctl connect
</span></span></code></pre></td></tr></table>
</div>
</div><p>当然也可以指定配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">sudo ktctl --kubeconfig ~/.kube/local connect
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行完成之后，这个集群的所有<code>svc</code>都可以直接在本地解析，当然直接ping pod的ip也是可以的</p>
]]></description>
</item><item>
    <title>OpenELB：让k8s私有环境对外暴露端口</title>
    <link>http://www.jobcher.com/openelb/</link>
    <pubDate>Wed, 13 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/openelb/</guid>
    <description><![CDATA[<h1 id="openelb云原生负载均衡器插件">OpenELB：云原生负载均衡器插件</h1>
<p>OpenELB 是一个开源的云原生负载均衡器实现，可以在基于裸金属服务器、边缘以及虚拟化的 Kubernetes 环境中使用 LoadBalancer 类型的 Service 对外暴露服务。</p>
<h2 id="在-kubernetes-中安装-openelb">在 Kubernetes 中安装 OpenELB</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl apply -f https://raw.githubusercontent.com/openelb/openelb/master/deploy/openelb.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>查看状态</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl get po -n openelb-system
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="使用-kubectl-删除-openelb">使用 kubectl 删除 OpenELB</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl delete -f https://raw.githubusercontent.com/openelb/openelb/master/deploy/openelb.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl get ns
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="配置-openelb">配置 OpenELB</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl edit configmap kube-proxy -n kube-system
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 修改 网卡</span>
</span></span><span class="line"><span class="cl">ipvs:
</span></span><span class="line"><span class="cl">  strictARP: <span class="nb">true</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="重启组件">重启组件</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl rollout restart daemonset kube-proxy -n kube-system
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="为-master1-节点添加一个-annotation-来指定网卡">为 master1 节点添加一个 annotation 来指定网卡：</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl annotate nodes master1 layer2.openelb.kubesphere.io/v1alpha1<span class="o">=</span><span class="s2">&#34;192.168.0.2&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="创建地址池-layer2-eipyaml">创建地址池 <code>layer2-eip.yaml</code></h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">network.kubesphere.io/v1alpha2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Eip</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">layer2-eip</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.0.91-192.168.0.100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">interface</span><span class="p">:</span><span class="w"> </span><span class="l">eth0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">protocol</span><span class="p">:</span><span class="w"> </span><span class="l">layer2</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="创建部署-jobcher-serviceyaml">创建部署 <code>jobcher-service.yaml</code></h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c">#暴露端口</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">jobcher-service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">annotations</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb.kubesphere.io/v1alpha1</span><span class="p">:</span><span class="w"> </span><span class="l">openelb</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">protocol.openelb.kubesphere.io/v1alpha1</span><span class="p">:</span><span class="w"> </span><span class="l">layer2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">eip.openelb.kubesphere.io/v1alpha2</span><span class="p">:</span><span class="w"> </span><span class="l">layer2-eip</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">jobcher-blog</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">selector</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">jobcher-blog</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">jobcher-port</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">protocol</span><span class="p">:</span><span class="w"> </span><span class="l">TCP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">targetPort</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">LoadBalancer</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>kubernetes ansible自动化部署</title>
    <link>http://www.jobcher.com/k8s5/</link>
    <pubDate>Fri, 08 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s5/</guid>
    <description><![CDATA[<h1 id="kubernetes-ansible-自动化部署">kubernetes ansible 自动化部署</h1>
<h2 id="服务器规划">服务器规划</h2>
<table>
<thead>
<tr>
<th style="text-align:left">角色</th>
<th style="text-align:left">IP</th>
<th style="text-align:left">组件</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">k8s-master1</td>
<td style="text-align:left">10.12.12.15</td>
<td style="text-align:left">kube-apiserver kube-controller-manager kube-scheduler etcd</td>
</tr>
<tr>
<td style="text-align:left">k8s-master2</td>
<td style="text-align:left">10.12.12.17</td>
<td style="text-align:left">kube-apiserver kube-controller-manager kube-scheduler etcd</td>
</tr>
<tr>
<td style="text-align:left">k8s-02</td>
<td style="text-align:left">10.12.12.22</td>
<td style="text-align:left">kubelet kube-proxy docker etcd</td>
</tr>
<tr>
<td style="text-align:left">k8s-03</td>
<td style="text-align:left">10.12.12.21</td>
<td style="text-align:left">kubelet kube-proxy docker etcd</td>
</tr>
<tr>
<td style="text-align:left">load Balancer(master)</td>
<td style="text-align:left">10.12.12.15 10.12.12.23(VIP)</td>
<td style="text-align:left">nginx keepalived</td>
</tr>
<tr>
<td style="text-align:left">load Balancer(backup)</td>
<td style="text-align:left">10.12.12.17</td>
<td style="text-align:left">nginx keepalived</td>
</tr>
</tbody>
</table>
<h2 id="系统初始化">系统初始化</h2>
<ol>
<li>关闭selinux，firewalld</li>
<li>关闭swap</li>
<li>时间同步</li>
<li>写hosts</li>
<li>ssh免密（可选）</li>
</ol>
<h2 id="etcd集群部署">etcd集群部署</h2>
<ol>
<li>生成etcd证书</li>
<li>部署三个ETC集群</li>
<li>查看集群状态</li>
</ol>
<h2 id="部署masterß">部署Masterß</h2>
<ol>
<li>生成apiserver证书</li>
<li>部署apiserver、controller-manager和scheduler组件</li>
<li>启动TLS Bootstrapping</li>
</ol>
<h2 id="部署node">部署Node</h2>
<ol>
<li>安装Docker</li>
<li>部署Kubelet和kube-proxy</li>
<li>在Master上运行为新Node颁发证书</li>
<li>授权apiserver访问kubelet</li>
</ol>
<h2 id="部署插件准备好镜像">部署插件（准备好镜像）</h2>
<ol>
<li>Flannel</li>
<li>Web UI</li>
<li>CoreDNS</li>
<li>Ingress Controller</li>
</ol>
<h2 id="master高可用">Master高可用</h2>
<ol>
<li>增加Master节点（与Master1一致）</li>
<li>部署nginx负载均衡器</li>
<li>Nginx+Keepalived 高可用</li>
<li>修改Node连接VIP</li>
</ol>
]]></description>
</item><item>
    <title>kubernetes 脚本快速安装</title>
    <link>http://www.jobcher.com/k8s4/</link>
    <pubDate>Thu, 10 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s4/</guid>
    <description><![CDATA[<h1 id="kubernetes-脚本快速安装">kubernetes 脚本快速安装</h1>
<ul>
<li>1、三台机器设置自己的hostname（不能是localhost）</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1"># 修改 hostname;  k8s-01要变为自己的hostname</span>
</span></span><span class="line"><span class="cl">hostnamectl set-hostname k8s-01
</span></span><span class="line"><span class="cl"><span class="c1"># 设置 hostname 解析</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;127.0.0.1   </span><span class="k">$(</span>hostname<span class="k">)</span><span class="s2">&#34;</span> &gt;&gt; /etc/hosts
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>2、所有机器批量执行如下脚本</p>
</li>
<li>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1">#先在所有机器执行 vi k8s.sh</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 进入编辑模式（输入i），把如下脚本复制</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 所有机器给脚本权限  chmod +x k8s.sh</span>
</span></span><span class="line"><span class="cl"><span class="c1">#执行脚本 ./k8s.sh</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span><span class="lnt">95
</span><span class="lnt">96
</span><span class="lnt">97
</span><span class="lnt">98
</span><span class="lnt">99
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1">#/bin/sh</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#######################开始设置环境##################################### \n</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;##################正在配置所有基础环境信息################## \n&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;##################关闭selinux################## \n&#34;</span>
</span></span><span class="line"><span class="cl">sed -i <span class="s1">&#39;s/enforcing/disabled/&#39;</span> /etc/selinux/config
</span></span><span class="line"><span class="cl">setenforce <span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;##################关闭swap################## \n&#34;</span>
</span></span><span class="line"><span class="cl">swapoff -a  
</span></span><span class="line"><span class="cl">sed -ri <span class="s1">&#39;s/.*swap.*/#&amp;/&#39;</span> /etc/fstab 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;##################配置路由转发################## \n&#34;</span>
</span></span><span class="line"><span class="cl">cat <span class="s">&lt;&lt;EOF | sudo tee /etc/modules-load.d/k8s.conf
</span></span></span><span class="line"><span class="cl"><span class="s">br_netfilter
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s1">&#39;net.ipv4.ip_forward = 1&#39;</span> &gt;&gt; /etc/sysctl.d/k8s.conf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 必须 ipv6流量桥接</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s1">&#39;net.bridge.bridge-nf-call-ip6tables = 1&#39;</span> &gt;&gt; /etc/sysctl.d/k8s.conf
</span></span><span class="line"><span class="cl"><span class="c1">## 必须 ipv4流量桥接</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s1">&#39;net.bridge.bridge-nf-call-iptables = 1&#39;</span> &gt;&gt; /etc/sysctl.d/k8s.conf
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;net.ipv6.conf.all.disable_ipv6 = 1&#34;</span> &gt;&gt; /etc/sysctl.d/k8s.conf
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;net.ipv6.conf.default.disable_ipv6 = 1&#34;</span> &gt;&gt; /etc/sysctl.d/k8s.conf
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;net.ipv6.conf.lo.disable_ipv6 = 1&#34;</span> &gt;&gt; /etc/sysctl.d/k8s.conf
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;net.ipv6.conf.all.forwarding = 1&#34;</span>  &gt;&gt; /etc/sysctl.d/k8s.conf
</span></span><span class="line"><span class="cl">modprobe br_netfilter
</span></span><span class="line"><span class="cl">sudo sysctl --system
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;##################配置ipvs################## \n&#34;</span>
</span></span><span class="line"><span class="cl">cat <span class="s">&lt;&lt;EOF | sudo tee /etc/sysconfig/modules/ipvs.modules
</span></span></span><span class="line"><span class="cl"><span class="s">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="s">modprobe -- ip_vs
</span></span></span><span class="line"><span class="cl"><span class="s">modprobe -- ip_vs_rr
</span></span></span><span class="line"><span class="cl"><span class="s">modprobe -- ip_vs_wrr
</span></span></span><span class="line"><span class="cl"><span class="s">modprobe -- ip_vs_sh
</span></span></span><span class="line"><span class="cl"><span class="s">modprobe -- nf_conntrack_ipv4
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">chmod <span class="m">755</span> /etc/sysconfig/modules/ipvs.modules 
</span></span><span class="line"><span class="cl">sh /etc/sysconfig/modules/ipvs.modules
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;##################安装ipvsadm相关软件################## \n&#34;</span>
</span></span><span class="line"><span class="cl">yum install -y ipset ipvsadm
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;##################安装docker容器环境################## \n&#34;</span>
</span></span><span class="line"><span class="cl">sudo yum remove docker*
</span></span><span class="line"><span class="cl">sudo yum install -y yum-utils
</span></span><span class="line"><span class="cl">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</span></span><span class="line"><span class="cl">yum install -y docker-ce-19.03.9  docker-ce-cli-19.03.9 containerd.io
</span></span><span class="line"><span class="cl">systemctl <span class="nb">enable</span> docker
</span></span><span class="line"><span class="cl">systemctl start docker
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo systemctl daemon-reload
</span></span><span class="line"><span class="cl">sudo systemctl restart docker
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;##################安装k8s核心包 kubeadm kubelet kubectl################## \n&#34;</span>
</span></span><span class="line"><span class="cl">cat <span class="s">&lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo
</span></span></span><span class="line"><span class="cl"><span class="s">[kubernetes]
</span></span></span><span class="line"><span class="cl"><span class="s">name=Kubernetes
</span></span></span><span class="line"><span class="cl"><span class="s">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
</span></span></span><span class="line"><span class="cl"><span class="s">enabled=1
</span></span></span><span class="line"><span class="cl"><span class="s">gpgcheck=0
</span></span></span><span class="line"><span class="cl"><span class="s">repo_gpgcheck=0
</span></span></span><span class="line"><span class="cl"><span class="s">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg
</span></span></span><span class="line"><span class="cl"><span class="s">   http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">###指定k8s安装版本</span>
</span></span><span class="line"><span class="cl">yum install -y kubelet-1.21.0 kubeadm-1.21.0 kubectl-1.21.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">###要把kubelet立即启动。</span>
</span></span><span class="line"><span class="cl">systemctl <span class="nb">enable</span> kubelet
</span></span><span class="line"><span class="cl">systemctl start kubelet
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">printf</span> <span class="s2">&#34;##################下载api-server等核心镜像################## \n&#34;</span>
</span></span><span class="line"><span class="cl">sudo tee ./images.sh <span class="s">&lt;&lt;-&#39;EOF&#39;
</span></span></span><span class="line"><span class="cl"><span class="s">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="s">docker pull k8s.gcr.io/kube-apiserver:v1.21.9
</span></span></span><span class="line"><span class="cl"><span class="s">docker pull k8s.gcr.io/kube-controller-manager:v1.21.9
</span></span></span><span class="line"><span class="cl"><span class="s">docker pull k8s.gcr.io/kube-scheduler:v1.21.9
</span></span></span><span class="line"><span class="cl"><span class="s">docker pull k8s.gcr.io/kube-proxy:v1.21.9
</span></span></span><span class="line"><span class="cl"><span class="s">docker pull k8s.gcr.io/pause:3.4.1
</span></span></span><span class="line"><span class="cl"><span class="s">docker pull k8s.gcr.io/etcd:3.4.13-0
</span></span></span><span class="line"><span class="cl"><span class="s">docker pull k8s.gcr.io/coredns/coredns:v1.8.0
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl">   
</span></span><span class="line"><span class="cl">chmod +x ./images.sh <span class="o">&amp;&amp;</span> ./images.sh
</span></span><span class="line"><span class="cl">   
</span></span><span class="line"><span class="cl"><span class="c1">### k8s的所有基本环境全部完成</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>3、使用kubeadm引导集群（参照初始化master继续做）</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#### --apiserver-advertise-address 的地址一定写成自己master机器的ip地址</span>
</span></span><span class="line"><span class="cl"><span class="c1">#### 虚拟机或者其他云厂商给你的机器ip  10.96  192.168</span>
</span></span><span class="line"><span class="cl"><span class="c1">#### 以下的只在master节点执行</span>
</span></span><span class="line"><span class="cl">kubeadm init <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--apiserver-advertise-address<span class="o">=</span>10.12.12.24 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--kubernetes-version v1.21.0 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--service-cidr<span class="o">=</span>10.96.0.0/16 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--pod-network-cidr<span class="o">=</span>10.124.0.0/16
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>4、master结束以后，按照控制台引导继续往下</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1">## 第一步</span>
</span></span><span class="line"><span class="cl">mkdir -p <span class="nv">$HOME</span>/.kube
</span></span><span class="line"><span class="cl">sudo cp -i /etc/kubernetes/admin.conf <span class="nv">$HOME</span>/.kube/config
</span></span><span class="line"><span class="cl">sudo chown <span class="k">$(</span>id -u<span class="k">)</span>:<span class="k">$(</span>id -g<span class="k">)</span> <span class="nv">$HOME</span>/.kube/config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">##第二步</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">KUBECONFIG</span><span class="o">=</span>/etc/kubernetes/admin.conf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">##第三步 部署网络插件</span>
</span></span><span class="line"><span class="cl">kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">##第四步，用控制台打印的kubeadm join 去其他node节点执行</span>
</span></span><span class="line"><span class="cl">kubeadm join 10.170.11.8:6443 --token cnb7x2.lzgz7mfzcjutn0nk <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	--discovery-token-ca-cert-hash sha256:00c9e977ee52632098aadb515c90076603daee94a167728110ef8086d0d5b37d
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="初始化worker节点worker执行">初始化worker节点（worker执行）</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1">##过期怎么办</span>
</span></span><span class="line"><span class="cl">kubeadm token create --print-join-command
</span></span><span class="line"><span class="cl">kubeadm join --token y1eyw5.ylg568kvohfdsfco --discovery-token-ca-cert-hash sha256: 6c35e4f73f72afd89bf1c8c303ee55677d2cdb1342d67bb23c852aba2efc7c73
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>5、验证集群</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1">#等一会，在master节点执行</span>
</span></span><span class="line"><span class="cl">kubectl get nodes
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>6、设置kube-proxy的ipvs模式</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1">##修改kube-proxy默认的配置</span>
</span></span><span class="line"><span class="cl">kubectl edit cm kube-proxy -n kube-system
</span></span><span class="line"><span class="cl"><span class="c1">## 修改mode: &#34;ipvs&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">##改完以后重启kube-proxy</span>
</span></span><span class="line"><span class="cl"><span class="c1">### 查到所有的kube-proxy</span>
</span></span><span class="line"><span class="cl">kubectl get pod -n kube-system <span class="p">|</span>grep kube-proxy
</span></span><span class="line"><span class="cl"><span class="c1">### 删除之前的即可</span>
</span></span><span class="line"><span class="cl">kubectl delete pod 【用自己查出来的kube-proxy-dw5sf kube-proxy-hsrwp kube-proxy-vqv7n】  -n kube-system
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">###</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
