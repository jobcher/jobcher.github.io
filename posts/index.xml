<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 打工人日志 - jobcher</title>
        <link>http://www.jobcher.com/posts/</link>
        <description>所有文章 | 打工人日志 - jobcher</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>nb@nbtyfood.com (jobcher)</managingEditor>
            <webMaster>nb@nbtyfood.com (jobcher)</webMaster><lastBuildDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://www.jobcher.com/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Kubernetes — 开放标准（OCI、CRI、CNI、CSI、SMI、CPI）概述</title>
    <link>http://www.jobcher.com/k8s12/</link>
    <pubDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s12/</guid>
    <description><![CDATA[<h1 id="kubernetes--开放标准ocicricnicsismicpi概述">Kubernetes — 开放标准（OCI、CRI、CNI、CSI、SMI、CPI）概述</h1>
<p>什么是 Kubernetes 开放标准？— K8s 开放标准简介<br>
<code>开放标准</code>有助于和补充像 <code>Kubernetes</code> 这样的系统，Kubernetes 是用于<code>编排容器</code>的事实上的标准平台。开放标准定义了实施 <code>Kubernetes</code> 的<code>最佳实践</code>，并在支持此实施方面发挥着至关重要的作用。开放标准由开源 <code>Kubernetes 社区</code>而非某个特定供应商制定，以确保更高的效率、避免供应商锁定以及更轻松地将其他软件集成到技术堆栈中。<br>
</p>
<h2 id="oci">OCI</h2>
<p>容器开放接口规范，由多家公司共同组成于2015年6月成立的项目（Docker, Google, CoreOS等公司），并由Linux基金会运行管理，旨在围绕容器格式和运行时制定一个开放的工业化标准，目前主要有两个标准文档：容器运行时标准 （runtime spec）和 容器镜像标准（image spec）</p>
<ul>
<li><code>OCI</code> 是一个开放的治理结构，其明确目的是围绕容器格式和运行时创建开放的行业标准。</li>
<li>它提供了必须由容器运行时引擎实现的规范。两个重要的规格是：
<ul>
<li><code>runC</code>：种子容器运行时引擎。大多数现代容器运行时环境都使用 <code>runC</code> 并围绕这个种子引擎开发附加功能。</li>
<li>这种低级运行时用于启动容器的各种工具，包括 <code>Docker</code> 本身。</li>
</ul>
</li>
<li><code>OCI 规范</code>：关于如何运行、构建和分发容器的映像、运行时和分发规范。</li>
<li>虽然 <code>Docker</code> 经常与容器技术同步使用，但社区一直致力于 OCI 的开放行业标准。</li>
</ul>
<h3 id="image-spec">Image-Spec</h3>
<ul>
<li>image-spec 定义了如何构建和打包容器镜像。</li>
<li>本规范的目标是创建可互操作的工具，用于构建、传输和准备要运行的容器映像。</li>
</ul>
<h3 id="runtime-spec">Runtime-Spec</h3>
<ul>
<li><code>runtime-spec</code> 指定容器的配置、执行环境和生命周期。</li>
<li>这概述了如何运行在磁盘上解压的“文件系统包(filesystem bundle)”。概括地说，OCI 实现会下载一个 OCI 映像，然后将该映像解压缩到一个 OCI 运行时文件系统包中。</li>
</ul>
<h3 id="distribution-spec">Distribution-Spec</h3>
<p><code>Distribution-Spec</code> 提供了一个标准，用于一般内容的分发，特别是容器图像的分发。它是 OCI 项目的<code>最新补充</code>。
实现分发规范的容器注册表为容器映像提供可靠、高度可扩展、安全的存储服务。
客户要么使用云提供商实施、供应商实施，要么使用分发的开源实施。</p>
<h2 id="cri">CRI</h2>
<p><code>CRI</code>（Container Runtime Interface）：容器运行时接口，提供计算资源。​ ​kubernetes1.5​​版本之后，kubernetes项目推出了自己的运行时接口api–CRI(container runtime interface)。</p>
<ul>
<li><code>CRI</code> 是关于如何在容器编排系统中实现容器运行时的规范。它在容器运行时的集成之上提供了一个抽象层。</li>
<li>它是一个插件接口，使 <code>kubelet</code> 能够使用各种容器运行时。 CRI 的核心机制是每个容器项目都可以自己实现一个 <code>CRI shim</code> 并自己处理 CRI 请求。</li>
</ul>
<blockquote>
<p>为了允许使用 Docker 以外的其他容器运行时，Kubernetes 在 2016 年引入了 CRI。</p>
</blockquote>
<h3 id="docker">Docker</h3>
<ul>
<li><code>Docker</code> 长期以来一直是标准，但从未真正为容器编排而生。</li>
<li>它是数百万正在构建容器化应用程序的开发人员的首选。</li>
</ul>
<blockquote>
<p>使用 Docker 作为 Kubernetes 的运行时已被弃用，并将在 Kubernetes 1.23 中删除。</p>
</blockquote>
<h3 id="containerd">containerd</h3>
<ul>
<li><code>containerd</code> 是运行容器的轻量级和高性能实现。</li>
<li>它被所有主要的云提供商用于 <code>Kubernetes</code> 即服务产品。</li>
<li>使用 <code>containerd</code> 创建容器比使用 Docker 简单得多。它最近越来越受欢迎。</li>
</ul>
<h3 id="cri-o">CRI-O</h3>
<ul>
<li><code>CRI-O</code> 是 <code>Kubernetes CRI</code> 的一种实现，可以使用 <code>OCI</code> 兼容的运行时。它是使用 <code>Docker</code> 作为 <code>Kubernetes</code> 运行时的轻量级替代方案。</li>
<li>它由 <code>Red Hat</code> 创建，并具有与 <code>podman</code> 和 <code>buildah</code> 密切相关的类似代码库。</li>
</ul>
<blockquote>
<p><code>containerd</code> 和 <code>CRI-O</code> 的想法非常简单：提供一个只包含运行容器的绝对必需品的运行时。</p>
</blockquote>
<h2 id="cni">CNI</h2>
<p><code>CNI</code>（Container Network Interface）：容器网络接口，提供网络资源。是和 CoreOS 主导制定的容器网络标准，它本身并不是实现或者代码，可以理解成一个协议。CNI旨在为容器平台提供网络的标准化。容器平台可以从CNI获取到满足网络互通条件的网络参数(如IP地址、网关、路由、DNS等)。</p>
<ul>
<li><code>CNI</code> 是关于如何<code>为容器实现网络的标准</code>，可用于编写或配置网络插件，并且可以很容易地在各种容器编排平台中交换不同的插件。</li>
<li>每个 <code>CNI 插件</code>都必须实现为由<code>容器管理系统</code>调用的可执行文件。 CNI 插件负责将网络接口插入容器网络命名空间并在主机上进行任何必要的更改。然后它应该将 IP 分配给接口，并通过调用适当的 IPAM 插件来设置与 IP 地址管理部分一致的路由。</li>
<li><code>Kubernetes</code> 支持各种不同的网络解决方案和插件，可以在各种不同的环境中实现 Kubernetes 网络。请参阅下面的一些 CNI 实现：</li>
</ul>
<h3 id="calico">Calico</h3>
<ul>
<li><code>Calico</code> 是另一个可用于 Kubernetes 生态系统的流行开源 CNI 插件。 <code>Calico</code> 由 Tigera 维护，定位于网络性能、灵活性和功率等因素至关重要的环境。</li>
<li>与 <code>Flannel</code> 不同，<code>Calico</code> 提供高级网络管理安全功能，同时提供主机和 Pod 之间连接的整体概览。</li>
<li>在标准的 Kubernetes 集群上，<code>Calico</code> 可以很容易地部署为每个节点上的 <code>DaemonSet</code>。集群中的每个节点都将安装三个 <code>Calico</code> 组件：<code>Felix</code>、<code>BIRD</code> 和 <code>confd</code>，用于管理多个网络任务。</li>
</ul>
<h3 id="flannel">Flannel</h3>
<ul>
<li><code>Flannel</code> 是一种为容器配置第 3 层网络结构的简单方法，专为 Kubernetes 设计。</li>
<li><code>Flannel</code> 由 CoreOS 开发，是可用于 Kubernetes 的最成熟的开源 CNI 项目之一。</li>
<li>它在每台主机上运行一个名为 <code>flanneld</code> 的小型单一二进制<code>代理</code>，并负责从更大的预配置地址空间中为每台主机分配子网租约。</li>
</ul>
<h3 id="cilium">Cilium</h3>
<ul>
<li><code>Cilium</code> 是由 Linux 内核开发人员开发的开源、高度可扩展的 <code>Kubernetes CNI</code> 解决方案。</li>
<li>它作为守护进程 <code>cilium-agent</code> 部署在 <code>Kubernetes</code> 集群的每个节点上，以管理操作并将网络定义转换为 <code>eBPF 程序</code>。</li>
<li><code>Pod</code> 之间的通信通过覆盖网络或使用路由协议进行。案例支持 IPv4 和 IPv6 地址。它还通过 HTTP 请求过滤器支持 Kubernetes 网络策略。</li>
</ul>
<h3 id="weavenet">WeaveNet</h3>
<ul>
<li><code>Weavescope</code> 开发的 <code>Weave Net</code> 是一个支持 CNI 的网络解决方案，允许在 Kubernetes 集群中进行灵活的网络连接。</li>
<li>它可以在 <code>Kubernetes</code> 集群上轻松安装和配置为守护程序集，在每个节点上安装必要的网络组件。</li>
<li>它利用内核系统在节点之间传输数据包。内核利用的协议被称为<code>快速数据路径</code>，它将数据包直接传输到目标 pod，而无需多次进出用户空间。</li>
</ul>
<h2 id="csi">CSI</h2>
<p><code>CSI</code>（Container Storage Interface）：容器存储接口，提供存储资源。由 kubernetes、Mesos、Docker 等社区成员联合制定的一个行业标准接口规范，旨在将任意存储系统暴露给容器化应用程序。</p>
<ul>
<li><code>CSI</code> 是关于如何在容器编排系统中实现存储的规范。</li>
<li>它是一种标准，用于将任意块和文件存储系统暴露给 <code>Kubernetes</code> 等容器编排系统上的容器化工作负载。</li>
<li>第三方存储提供商使用 <code>CSI</code> 公开他们的新存储系统变得非常可扩展，而无需实际接触 <code>Kubernetes</code> 代码。</li>
</ul>
<h3 id="请参阅下面的一些-csi-实现">请参阅下面的一些 CSI 实现：</h3>
<ul>
<li>Rook</li>
<li>Ceph</li>
<li>OpenEBS</li>
</ul>
<h2 id="smi">SMI</h2>
<ul>
<li><code>SMI</code>(Service Mesh Interface) : 是关于如何在容器编排系统中实现 Service Mesh 的应用规范，重点关注 Kubernetes 和最常见的服务网格用例的基本功能集，而无需担心锁定。它涵盖了最常见的服务网格功能：</li>
<li>流量策略——跨服务应用身份和传输加密等策略</li>
<li>流量遥测——捕获关键指标，如错误率和服务之间的延迟</li>
<li>流量管理——在不同服务之间转移流量</li>
</ul>
<h3 id="istio">Istio</h3>
<ul>
<li><code>Istio</code> 是一个开源服务网格，它透明地分层到现有的分布式应用程序上。它提供了一种统一且更有效的方式来保护、连接和监控服务。</li>
<li>它是负载平衡、服务到服务身份验证和监控的途径——几乎不需要更改服务代码。</li>
<li><code>Istio</code> 通过<code>分布式</code>或<code>微服务架构</code>解决了开发人员和运营商面临的挑战。</li>
</ul>
<h3 id="linkerd">Linkerd</h3>
<ul>
<li><code>Linkerd</code> 是 <code>Kubernetes</code>的服务网格，它通过为您提供运行时调试、可观察性、可靠性和安全性，使运行服务更容易、更安全——所有这些都不需要对代码进行任何更改。</li>
<li>它通过在每个服务实例旁边安装一组超轻、透明的<code>代理</code>来工作。这些代理会自动处理进出服务的所有流量。</li>
</ul>
<h2 id="cpi">CPI</h2>
<ul>
<li><code>CPI</code> (Cloud Provider Interface) :是关于如何实现 Kubernetes 集群的规范。它将底层云基础设施功能的智能与核心 <code>Kubernetes</code> 分离。</li>
</ul>
<h3 id="请参阅下面的一些-cpi-实现">请参阅下面的一些 CPI 实现：</h3>
<ul>
<li>AWS</li>
<li>Azure</li>
<li>GCP</li>
</ul>
]]></description>
</item><item>
    <title>Kubernetes — 探针和生命周期</title>
    <link>http://www.jobcher.com/k8s13/</link>
    <pubDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s13/</guid>
    <description><![CDATA[<h1 id="kubernetes--探针和生命周期">Kubernetes — 探针和生命周期</h1>
<p>用于判断容器内应用程序是否已经启动。</p>
<ul>
<li>存活（Liveness）探针
<ul>
<li>用于探测容器是否运行，如果探测失败，kubelet会根据配置的重启策略进行相应的处理，若没有配置探针该返回值默认为success</li>
</ul>
</li>
<li>就绪（Readiness）探针
<ul>
<li>用于探测容器内的程序是否健康，如果返回值为success，那么代表这个容器已经完全启动，并且程序已经是可以接受流量的状态</li>
</ul>
</li>
<li>启动（Startup）探针
<ul>
<li>用于探测容器是否启动，如果配置了startup 就会先禁止其他探测，直到它成功，成功后将不在运行探测</li>
</ul>
</li>
</ul>
<h2 id="pod检测方式">Pod检测方式</h2>
<ul>
<li>ExecAction：在容器执行命令，返回值为0，则认为容器健康</li>
<li>TCPSocketAction：通过TCP连接检查容器是否联通，通的话，则认为容器正常</li>
<li>HTTPGetAction：通过应用程序暴露的API地址来检查程序是否正常的，如果状态码为200-400之间，则认为容器健康</li>
</ul>
]]></description>
</item><item>
    <title>kubernetes 部署插件 (Flannel、Web UI、CoreDNS、Ingress Controller)</title>
    <link>http://www.jobcher.com/k8s11/</link>
    <pubDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s11/</guid>
    <description><![CDATA[<h1 id="k8s部署插件">k8s部署插件</h1>
<p><code>Kubernetes</code> 是高度可配置且可扩展的。因此，大多数情况下， 你不需要派生自己的 Kubernetes 副本或者向项目代码提交补丁，本文会介绍几种常用的k8s插件，如果大家喜欢的话，希望大家点赞支持。</p>
<h2 id="1-flannel-网络插件">1. Flannel 网络插件</h2>
<p><code>Flannel</code>是由go语言开发，是一种基于Overlay 网络的<code>跨主机容器网络解决方案</code>，也就是将<code>TCP数据包</code>封装在另一种网络包里面进行<code>路由转发和通信</code>，Flannel 是CoreOS 开发，专门用于docker多主机互联的一个工具，简单来说，它的功能是<code>让集群中的不同节点主机创建的容器都具有全局唯一的虚拟IP地址</code><br>
主要功能：</p>
<ul>
<li>为每个 node 分配 subnet，容器将自动从该子网中获取 IP 地址</li>
<li>当有 node 加入到网络中时，为每个 node 增加路由配置</li>
</ul>
<p></p>
<h3 id="下载并安装">下载并安装</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
</span></span><span class="line"><span class="cl">kubectl apply -f kube-flannel.yml
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果yml中的&quot;Network&quot;: <code>10.244.0.0/16</code>和<code>kubeadm init xxx --pod-network-cidr</code>不一样，就需要修改成一样的。不然可能会使得<code>Node</code>间<code>Cluster IP</code>不通。</p>
<h2 id="2-ingress-controller">2. Ingress Controller</h2>
<p><code>Ingress</code> 是对集群中服务的外部访问进行管理的 API 对象，典型的访问方式是 HTTP。<br>
<code>Ingress</code> 可以提供负载均衡、SSL 终结和基于名称的虚拟托管<br>
下面是一个将所有流量都发送到同一 Service 的简单 Ingress 示例：<br>
</p>
<p><code>Ingress</code> 可为 <code>Service</code> 提供外部可访问的 URL、负载均衡流量、终止 SSL/TLS，以及基于名称的虚拟托管。 <code>Ingress 控制器</code> 通常负责通过负载均衡器来实现 Ingress，尽管它也可以配置边缘路由器或其他前端来帮助处理流量。</p>
<p><code>Ingress 不会公开</code>任意端口或协议。 将 <code>HTTP</code> 和 <code>HTTPS</code> 以外的服务公开到 <code>Internet</code> 时，通常使用 <code>Service</code>.<code>Type=NodePort</code> 或 Service.<code>Type=LoadBalancer</code> 类型的 Service</p>
<h3 id="其他">其他</h3>
<p>为了让 <code>Ingress</code> 资源工作，集群必须有一个正在运行的 <code>Ingress 控制器</code>。</p>
<p>与作为 <code>kube-controller-manager</code> 可执行文件的一部分运行的其他类型的控制器不同， Ingress 控制器不是随集群自动启动的。 基于此页面，你可选择最适合你的集群的 ingress 控制器实现。</p>
<h2 id="3-coredns">3. CoreDNS</h2>
<p><code>CoreDNS</code> 是一个灵活可扩展的 <code>DNS 服务器</code>，可以作为 <code>Kubernetes 集群 DNS</code>。 与 Kubernetes 一样，CoreDNS 项目由 CNCF 托管。<br>
在 <code>Kubernetes 1.21</code> 版本中，<code>kubeadm</code> 移除了对将 <code>kube-dns</code> 作为 DNS 应用的支持。 对于 <code>kubeadm v1.25</code>，所支持的唯一的集群 DNS 应用是 <code>CoreDNS</code>。</p>
<p>当你使用 <code>kubeadm</code> 升级使用 <code>kube-dns</code> 的集群时，你还可以执行到 <code>CoreDNS</code> 的迁移。 在这种场景中，<code>kubeadm</code> 将基于 <code>kube-dns ConfigMap</code> 生成 <code>CoreDNS</code> 配置<code>（&quot;Corefile&quot;）</code>， 保存存根域和上游名称服务器的配置。</p>
<p>通过替换现有集群部署中的 <code>kube-dns</code>，或者使用 kubeadm 等工具来为你部署和升级集群， 可以在你的集群中使用 CoreDNS 而非 kube-dns
你必须拥有一个 <code>Kubernetes 的集群</code>，同时你的 Kubernetes 集群必须带有 <code>kubectl 命令行工具</code>。 建议在至少有两个节点的集群上运行本教程，且这些节点不作为控制平面主机。</p>
<h2 id="4-web-ui">4. Web UI</h2>
<p><code>Dashboard</code> 是基于网页的 <code>Kubernetes</code> 用户界面。 你可以使用 <code>Dashboard</code> 将容器应用部署到 <code>Kubernetes</code> 集群中，也可以对容器应用排错，还能管理集群资源。 你可以使用 <code>Dashboard</code> 获取运行在集群中的应用的概览信息，也可以创建或者修改 <code>Kubernetes</code> 资源 （如 <code>Deployment，Job，DaemonSet</code> 等等）。 例如，你可以对 <code>Deployment</code> 实现弹性伸缩、发起滚动升级、重启 <code>Pod</code> 或者使用向导创建新的应用<br>
</p>
<h3 id="安装">安装</h3>
<p>默认情况下不会部署 <code>Dashboard</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1">#https 方式</span>
</span></span><span class="line"><span class="cl">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.6.1/aio/deploy/recommended.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 或者 http方式 </span>
</span></span><span class="line"><span class="cl">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.6.1/aio/deploy/alternative.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="暴露外部连接">暴露外部连接</h3>
<p>创建 <code>webUIservice.yaml</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">vim webUIservice.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>使用loadBalancer</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">k8s-app</span><span class="p">:</span><span class="w"> </span><span class="l">kubernetes-dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">kubernetes-dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">namespace</span><span class="p">:</span><span class="w"> </span><span class="l">kubernetes-dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">annotations</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lb.kubesphere.io/v1alpha1</span><span class="p">:</span><span class="w"> </span><span class="l">openelb</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">protocol.openelb.kubesphere.io/v1alpha1</span><span class="p">:</span><span class="w"> </span><span class="l">layer2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">eip.openelb.kubesphere.io/v1alpha2</span><span class="p">:</span><span class="w"> </span><span class="l">layer2-eip</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">protocol</span><span class="p">:</span><span class="w"> </span><span class="l">TCP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">targetPort</span><span class="p">:</span><span class="w"> </span><span class="m">9090</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">selector</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">k8s-app</span><span class="p">:</span><span class="w"> </span><span class="l">kubernetes-dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">LoadBalancer</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>kubectl apply -f webUIservice.yaml</p>
</blockquote>
<h3 id="创建并获取token">创建并获取token</h3>
<p>创建管理员</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl create serviceaccount dashboard-admin -n kube-system
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl create clusterrolebinding dashboard-admin --clusterrole<span class="o">=</span>cluster-admin --serviceaccount<span class="o">=</span>kube-system:dashboard-admin
</span></span></code></pre></td></tr></table>
</div>
</div><p>获取token</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">kubectl describe secrets -n kube-system <span class="k">$(</span>kubectl -n kube-system get secret <span class="p">|</span> grep dashboard-admin <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span><span class="k">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>菠萝油条虾</title>
    <link>http://www.jobcher.com/youtiaoxia/</link>
    <pubDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/youtiaoxia/</guid>
    <description><![CDATA[<h1 id="菠萝油条虾">菠萝油条虾</h1>
<!DOCTYPE HTML>
<html>

  <head>
    
    <style type="text/css">
      .aspect-ratio {
        position: relative;
        width: 100%;
        height: 0;
        padding-bottom: 75%;
      }

      .aspect-ratio iframe {
        position: absolute;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
      }
    </style>
  </head>

  <body>
    <div class="aspect-ratio">
      <iframe
              src="https://player.bilibili.com/player.html?bvid=BV1CJ411K7LV&page=1&high_quality=1&danmaku=0"
              scrolling="no" 
              border="0" 
              frameborder="no" 
              framespacing="0" 
              allowfullscreen="true"
              sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"
              >
      </iframe>
      
      
    </div>
  </body>

</html>

]]></description>
</item><item>
    <title>Cloudflare Zero Trust 内网穿透</title>
    <link>http://www.jobcher.com/cloudflaretrust/</link>
    <pubDate>Fri, 30 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/cloudflaretrust/</guid>
    <description><![CDATA[<h1 id="cloudflare-zero-trust-内网穿透">Cloudflare Zero Trust 内网穿透</h1>
<p><br>
最快的 <code>Zero Trust</code> 应用访问和互联网浏览平台<br>
增加可见性，消除复杂性，降低远程和办公室用户的风险。杜绝数据丢失、恶意软件和网络钓鱼，保护用户、应用程序和设备安全。<br>
使用 Tunnel隧道来实现内网传统，实现内网访问各类应用</p>
<h2 id="安装部署">安装部署</h2>
<p><a href="https://dash.teams.cloudflare.com/" target="_blank" rel="noopener noreffer">https://dash.teams.cloudflare.com/</a></p>
<h3 id="docker-部署">Docker 部署</h3>
<p>在docker环境运行 <code>&lt;token&gt;</code> 是你个人令牌</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker run -d --name cloudflared cloudflare/cloudflared:latest tunnel --no-autoupdate run --token &lt;token&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="linux部署">Linux部署</h3>
<ol>
<li>X86-64位</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">curl -L --output cloudflared.rpm https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-x86_64.rpm <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>sudo yum localinstall -y cloudflared.rpm <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>sudo cloudflared service install &lt;token&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>X86-32位</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">curl -L --output cloudflared.rpm https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-386.rpm <span class="o">&amp;&amp;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo yum localinstall -y cloudflared.rpm <span class="o">&amp;&amp;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo cloudflared service install &lt;token&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>arm64</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">curl -L --output cloudflared.rpm https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-aarch64.rpm <span class="o">&amp;&amp;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo yum localinstall -y cloudflared.rpm <span class="o">&amp;&amp;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo cloudflared service install &lt;token&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>arm32</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">curl -L --output cloudflared.rpm https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm.rpm <span class="o">&amp;&amp;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo yum localinstall -y cloudflared.rpm <span class="o">&amp;&amp;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo cloudflared service install &lt;token&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="windows部署">windows部署</h3>
<ol>
<li>下载 <a href="https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.msi" target="_blank" rel="noopener noreffer">https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.msi</a></li>
<li>运行安装程序</li>
<li>以管理员身份打开命令提示符</li>
<li>运行以下命令</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">cloudflared.exe service install &lt;token&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="在cloudflare里配置内网穿透">在cloudflare里配置内网穿透</h2>
<p></p>
]]></description>
</item><item>
    <title>苏州旅行</title>
    <link>http://www.jobcher.com/suzhou/</link>
    <pubDate>Tue, 27 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/suzhou/</guid>
    <description><![CDATA[<h1 id="苏州旅行">苏州旅行</h1>
<table width="180"><tr><td bgcolor=#ff0000><font color="#ffffff">新冠肺炎 COVID-19 警告 </font></td></tr></table>  
<p>苏州，古称吴，现简称苏，是中华人民共和国江苏省东南部的一个地级市，位于长江三角洲和太湖平原的中心地带，著名的鱼米之乡、状元之乡、院士之乡、经济重镇、历史文化名城，自古与杭州共享有“上有天堂、下有苏杭”美誉。</p>
<h2 id="苏州景点">苏州景点</h2>
<h3 id="day1">day1</h3>
<ul>
<li>金鸡湖
<ul>
<li>苏州金鸡湖，是国家<code>5A级景区</code>，但却是免费开放的。湖东与湖西高楼林立，展现了苏州现代的一面。夜晚，灯光璀璨，如群星般夺目；霓虹闪烁，如银河般绚烂~</li>
<li>
<table>
<thead>
<tr>
<th style="text-align:left">金鸡湖十景</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">苏州中心</td>
</tr>
<tr>
<td style="text-align:left">东方之门</td>
</tr>
<tr>
<td style="text-align:left">音乐喷泉</td>
</tr>
<tr>
<td style="text-align:left">金鸡湖大桥</td>
</tr>
<tr>
<td style="text-align:left">文化艺术中心</td>
</tr>
<tr>
<td style="text-align:left">月光码头</td>
</tr>
<tr>
<td style="text-align:left">诚品书店</td>
</tr>
<tr>
<td style="text-align:left">国金中心</td>
</tr>
<tr>
<td style="text-align:left">望湖角</td>
</tr>
<tr>
<td style="text-align:left">李公堤</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
</ul>
<h3 id="day2">day2</h3>
<ul>
<li>苏州博物馆
<ul>
<li></li>
<li>地址：姑苏区东北街204号</li>
<li>交通：乘坐游1、游2、游5、55、178、202、309、313、518、529路等到苏州博物馆</li>
<li>门票：免费(可在官网提前预约)</li>
<li>开放时间：每星期二至星期日- 9:00~17:00（16:00停止入馆）
◆建议用时：2-3小时</li>
</ul>
</li>
<li>拙政园
<ul>
<li></li>
<li></li>
<li><code>拙政园</code>和<code>苏州博物馆</code>紧临，两者之间<code>步行</code>不会超过<code>3分钟</code>，而平江路是在拙政园的南门沿着门前的东北街往东走，大约在<code>150米处右转</code>过桥就是了，因此可以把这三处安排在同一天，建议游览顺序是拙政园—苏州博物馆—平江路。</li>
<li>淡季（1、2、3、6、11、12月）：70元</li>
<li>旺季（4、5、7、8、9、10月）：90元</li>
</ul>
</li>
</ul>
<h3 id="day3">day3</h3>
<ul>
<li>虎丘
<ul>
<li></li>
<li>地址：姑苏区山塘街虎丘山门内8号</li>
<li>交通：南门入口：146、游1、游2路虎丘首末站；北门入口：32、快线3号虎丘北门站</li>
<li>门票：淡季：60.00元 旺季：80.00元</li>
<li>开放时间： 7:30-17:30/17：00</li>
<li>建议用时：2-3小时</li>
</ul>
</li>
</ul>
<h2 id="苏州美食">苏州美食</h2>
<h3 id="饭店">饭店</h3>
<ul>
<li>苏帮菜——浓油赤酱里的姑苏风情
<ul>
<li><code>鲃肺汤</code>是取生长于太湖一带的鲃鱼，将其肉与肝加入火腿、香菇、笋片等辅料，在鸡汤中共同熬煮，汤鲜味美，是一道不可多得的汤品。</li>
<li><code>酱方</code>是采用上乘猪五花为原料，经24小时腌制后，加入卤汁炖煮3小时而成。肉的色泽鲜亮诱人，入口外皮Q弹、肉质紧实。</li>
<li><code>响油鳝糊</code>是以将新鲜鳝鱼切成段，加酱油等佐料爆炒。因鳝糊上桌时油滋滋作响，而得名“响油鳝糊”。菜色深红，口味鲜甜，油而不腻。</li>
<li><code>樱桃肉</code>因肉形状及色泽极似樱桃而得名，是将优质的五花肉切成小块，以文火炖煮七八小时而成。肥而不腻，满口精华。</li>
<li><code>松鼠鳜鱼</code>是将鳜鱼在油锅内炸至金黄，再淋上由番茄酱等熬制的酱汁而成。因炸开的鱼肉形似松鼠而得名，入口酥脆酸甜。</li>
<li><code>碧螺虾仁</code>是将新鲜虾仁配以碧螺春为佐料烹制而成，色泽清淡雅致，虾肉饱满Q弹，鲜甜中夹杂了茶叶的香味。</li>
<li>推荐餐厅：
<ul>
<li>珍珠饭店：蚌肉金花菜</li>
<li>吴门人家：吴门人家<code>6:30-9:00</code>供应早茶，提供糖粥、豆腐花、苏式面、馄饨等各类苏式点心，价格为<code>20元/人</code></li>
<li>得月楼：松鼠桂鱼、响油鳝糊、清炒虾仁、油爆虾、蟹粉豆腐、狮子头等</li>
<li>松鹤楼：店内供应的菜品与得月楼也是大同小异</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="小吃">小吃</h3>
<ul>
<li>苏式汤面——老苏州的早餐
<ul>
<li>推荐餐厅：
<ul>
<li>同得兴：枫镇大肉面</li>
<li>孙盛兴奥灶面馆: 奥灶鸭和爆鱼的浇头</li>
<li>韦复兴: 阳春面</li>
</ul>
</li>
</ul>
</li>
<li>苏式点心——吴侬软语般的甜糯滋味
<ul>
<li>推荐餐厅：
<ul>
<li>随柳居:糖粥、泡泡小馄饨</li>
<li>新梅华·茶点餐厅：糖芋艿</li>
<li>老苏州大客堂·特色小吃：响油鳝糊、生煎、锅贴</li>
</ul>
</li>
</ul>
</li>
<li>生煎——一口爆汁的苏州人气美食
<ul>
<li>推荐餐厅：
<ul>
<li>哑巴生煎：泡泡小馄饨、牛肉粉丝汤</li>
<li>大阿二生煎：两面黄、生煎</li>
</ul>
</li>
</ul>
</li>
<li>馄饨——别具风味的平凡美食
<ul>
<li>推荐餐厅：
<ul>
<li>绿杨馄饨:鲜肉、三鲜、鸡丝、鸡汁虾肉、荠菜、香菇馄饨</li>
<li>熙盛源:无锡小笼、红汤馄饨、开洋馄饨、蟹粉小笼</li>
</ul>
</li>
</ul>
</li>
<li>烧饼豆浆——寻常美食中的苏州味道
<ul>
<li>推荐餐厅：
<ul>
<li>王氏林记烧饼(双塔菜场店)：大饼油条、豆浆</li>
<li>阊门姚记豆浆：24小时通宵营业，咸豆浆、荷叶包美人</li>
</ul>
</li>
</ul>
</li>
<li>糕团——苏州风俗必备美食
<ul>
<li>推荐餐厅：
<ul>
<li>黄天源：定胜糕、猪油糕、薄荷糕</li>
<li>明月楼(糕团店)：桂花糕、炒肉团子</li>
<li>长发西饼：鲜肉月饼</li>
<li>胥城鲜肉月饼：鲜肉月饼</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="vlog系列">vlog系列</h2>
<!DOCTYPE HTML>
<html>

  <head>
    
    <style type="text/css">
      .aspect-ratio {
        position: relative;
        width: 100%;
        height: 0;
        padding-bottom: 75%;
      }

      .aspect-ratio iframe {
        position: absolute;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
      }
    </style>
  </head>

  <body>
    <div class="aspect-ratio">
      <iframe
              src="https://player.bilibili.com/player.html?bvid=BV1Xi4y1y7Si&page=1&high_quality=1&danmaku=0"
              scrolling="no" 
              border="0" 
              frameborder="no" 
              framespacing="0" 
              allowfullscreen="true"
              sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"
              >
      </iframe>
      
      
    </div>
  </body>

</html>

]]></description>
</item><item>
    <title>懒人烧排骨</title>
    <link>http://www.jobcher.com/paigu/</link>
    <pubDate>Mon, 26 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/paigu/</guid>
    <description><![CDATA[<h3 id="主料">【主料】</h3>
<ul>
<li>精排骨（500克）</li>
</ul>
<h3 id="辅料">【辅料】</h3>
<ul>
<li>食用面碱（约2克）</li>
<li>柠檬（半个）</li>
<li>生姜（1小块）</li>
<li>小葱（2根）</li>
<li>八角（1颗）</li>
<li>桂皮（1小块）</li>
<li>香叶（半片）</li>
<li>冰糖（约50克）</li>
<li>可乐（1000克）</li>
</ul>
<h3 id="调味料">【调味料】</h3>
<ul>
<li>食用盐（适量）</li>
<li>料酒（适量）</li>
<li>生抽酱油（20克）</li>
</ul>
<h2 id="教学视频">教学视频</h2>
<!DOCTYPE HTML>
<html>

  <head>
    
    <style type="text/css">
      .aspect-ratio {
        position: relative;
        width: 100%;
        height: 0;
        padding-bottom: 75%;
      }

      .aspect-ratio iframe {
        position: absolute;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
      }
    </style>
  </head>

  <body>
    <div class="aspect-ratio">
      <iframe
              src="https://player.bilibili.com/player.html?bvid=BV1Jk4y1R7Ka&page=1&high_quality=1&danmaku=0"
              scrolling="no" 
              border="0" 
              frameborder="no" 
              framespacing="0" 
              allowfullscreen="true"
              sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"
              >
      </iframe>
      
      
    </div>
  </body>

</html>

]]></description>
</item><item>
    <title>k8s CNI 问题 连接认证失效</title>
    <link>http://www.jobcher.com/k8s-error2/</link>
    <pubDate>Fri, 23 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s-error2/</guid>
    <description><![CDATA[<h1 id="k8s-cni-问题-连接认证失效">k8s CNI 问题 连接认证失效</h1>
<p>删除 <code>calico</code> 换成 <code>flannel</code> 后，容器没有正常启动<br>
network: error getting ClusterInformation: connection is unauthorized: Unauthorized]</p>
<h2 id="解决问题">解决问题</h2>
<p>删除掉 <code>/etc/cni/net.d/</code> 目录下的 calico 配置文件即可。<br>
要删除<code>所有节点</code>的配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">sudo rm -rf /etc/cni/net.d/*calico*
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="不要重复网络插件">不要重复网络插件</h2>
<p></p>
]]></description>
</item><item>
    <title>k8s.gcr.io国内无法连接解决方法</title>
    <link>http://www.jobcher.com/k8s-error3/</link>
    <pubDate>Thu, 22 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/k8s-error3/</guid>
    <description><![CDATA[<h1 id="k8sgcrio国内无法连接解决方法">k8s.gcr.io国内无法连接解决方法</h1>
<p>Get <a href="https://k8s.gcr.io/v2/" target="_blank" rel="noopener noreffer">https://k8s.gcr.io/v2/</a>: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)<br>
这个一看知道什么原因了，应该GFW！那好吧，只能给docker加个代理了。</p>
<h2 id="解决问题">解决问题</h2>
<p>添加mirror站点</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">registry.cn-hangzhou.aliyuncs.com/google_containers
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Golang 初识（安装、使用）</title>
    <link>http://www.jobcher.com/golang/</link>
    <pubDate>Wed, 21 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.jobcher.com/golang/</guid>
    <description><![CDATA[<h1 id="golang-初识安装使用">Golang 初识（安装、使用）</h1>
<h2 id="go-导学">Go 导学</h2>
<p>go语言由google公司推出。</p>
<ul>
<li>运行速度快，简单易学</li>
<li>适合区块链开发</li>
<li>拥有丰富指令</li>
<li>可以直接包含C语言</li>
<li>语言层面支持并发</li>
</ul>
<h3 id="go-方向">Go 方向</h3>
<ul>
<li>网络编程</li>
<li>服务器编程</li>
<li>区块链开发</li>
</ul>
<h2 id="环境安装">环境安装</h2>
<h3 id="安装环境">安装环境</h3>
<p>安装包下载<br>
<a href="https://golang.google.cn/dl/" target="_blank" rel="noopener noreffer">https://golang.google.cn/dl/</a></p>
<h3 id="windows-部署">windows 部署</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">wget https://golang.google.cn/dl/go1.19.1.windows-amd64.msi
</span></span><span class="line"><span class="cl"><span class="c1"># 直接安装</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="gopath-设置">GOPATH 设置</h3>
<p>在环境变量 <code>PATH</code> 上直接配置安装地址</p>
<h2 id="编写第一个程序">编写第一个程序</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="s">&#34;fmt&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Hello World!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
